------------------------------------------------------------
example_id: 599
intent: 
remove all null values from columns 'three ' , 'four ' and 'five ' of dataframe ` df2 `
canonicalized reference: 
df2.dropna(subset=['three', 'four', 'five'], how='all')
canonicalized prediction: 
df2 = df2.findall(df2, df2)
reference code for bleu calculation: 
df2.dropna(subset=['three', 'four', 'five'], how='all')
predicted code for bleu calculation: 
df2 = df2.findall(df2, df2)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 600
intent: 
insert a list ` k ` at the front of list ` a `
canonicalized reference: 
a.insert(0, k)
canonicalized prediction: 
[i for i in k if x != 0]
reference code for bleu calculation: 
a.insert(0, k)
predicted code for bleu calculation: 
[i for i in k if x != 0]
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 601
intent: 
insert elements of list ` k ` into list ` a ` at position ` n `
canonicalized reference: 
a = a[:n] + k + a[n:]
canonicalized prediction: 
[i for i in n if n != n]
reference code for bleu calculation: 
a = a[:n] + k + a[n:]
predicted code for bleu calculation: 
[i for i in n if n != n]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 602
intent: 
calculate the mean of the nonzero values ' indices of dataframe ` df `
canonicalized reference: 
np.flatnonzero(x).mean()
canonicalized prediction: 
df[i]
reference code for bleu calculation: 
np.flatnonzero(x).mean()
predicted code for bleu calculation: 
df[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 603
intent: 
get date from dataframe ` df ` column 'dates ' to column 'just_date '
canonicalized reference: 
df['just_date'] = df['dates'].dt.date
canonicalized prediction: 
df = df.findall(df, df)
reference code for bleu calculation: 
df['just_date'] = df['dates'].dt.date
predicted code for bleu calculation: 
df = df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 604
intent: 
remove elements in list ` b ` from list ` a `
canonicalized reference: 
[x for x in a if x not in b]
canonicalized prediction: 
b[i]
reference code for bleu calculation: 
[x for x in a if x not in b]
predicted code for bleu calculation: 
b[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 605
intent: 
join elements of each tuple in list ` a ` into one string
canonicalized reference: 
[''.join(x) for x in a]
canonicalized prediction: 
dict(a)
reference code for bleu calculation: 
[''.join(x) for x in a]
predicted code for bleu calculation: 
dict(a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 606
intent: 
join items of each tuple in list of tuples ` a ` into a list of strings
canonicalized reference: 
list(map(''.join, a))
canonicalized prediction: 
sorted(a)
reference code for bleu calculation: 
list(map(''.join, a))
predicted code for bleu calculation: 
sorted(a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 607
intent: 
match blank lines in ` s ` with regular expressions
canonicalized reference: 
re.split('\n\\s*\n', s)
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
re.split('\n\\s*\n', s)
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 608
intent: 
merge a list of integers ` [ 1 , 2 , 3 , 4 , 5 ] ` into a single integer
canonicalized reference: 
from functools import reduce
canonicalized prediction: 
5[i]
reference code for bleu calculation: 
from functools import reduce
reduce(lambda x, y: 10 * x + y, [1, 2, 3, 4, 5])
predicted code for bleu calculation: 
5[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 609
intent: 
Convert float 24322.34 to comma-separated string
canonicalized reference: 
"""{0:,.2f}""".format(24322.34)
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
"""{0:,.2f}""".format(24322.34)
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 610
intent: 
pass dictionary items ` data ` as keyword arguments in function ` my_function `
canonicalized reference: 
my_function(**data)
canonicalized prediction: 
my_function[i] = my_function.items()
reference code for bleu calculation: 
my_function(**data)
predicted code for bleu calculation: 
my_function[i] = my_function.items()
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 611
intent: 
get line count of file 'myfile.txt '
canonicalized reference: 
sum(1 for line in open('myfile.txt'))
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
sum((1 for line in open('myfile.txt')))
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 612
intent: 
get line count of file ` filename `
canonicalized reference: 
def bufcount(filename):
    f = open(filename)
    lines = 0
    buf_size = 1024 * 1024
    read_f = f.read
    buf = read_f(buf_size)
    while buf:
        lines += buf.count('\n')
        buf = read_f(buf_size)
    return lines
canonicalized prediction: 
filename = filename.findall(filename, filename)
reference code for bleu calculation: 
def bufcount(filename):
    f = open(filename)
    lines = 0
    buf_size = (1024 * 1024)
    read_f = f.read
    buf = read_f(buf_size)
    while buf:
        lines += buf.count('\n')
        buf = read_f(buf_size)
    return lines
predicted code for bleu calculation: 
filename = filename.findall(filename, filename)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 613
intent: 
round 1123.456789 to be an integer
canonicalized reference: 
print round(1123.456789, -1)
canonicalized prediction: 
os.path.findall('round')
reference code for bleu calculation: 
print(round(1123.456789, -1))
predicted code for bleu calculation: 
os.path.findall('round')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 614
intent: 
sort list ` X ` based on values from another list ` Y `
canonicalized reference: 
[x for y, x in sorted(zip(Y, X))]
canonicalized prediction: 
Y[i]
reference code for bleu calculation: 
[x for y, x in sorted(zip(Y, X))]
predicted code for bleu calculation: 
Y[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 615
intent: 
sorting list ' X ' based on values from another list ' Y '
canonicalized reference: 
[x for y, x in sorted(zip(Y, X))]
canonicalized prediction: 
sorted((i, v) for i in Y)
reference code for bleu calculation: 
[x for y, x in sorted(zip(Y, X))]
predicted code for bleu calculation: 
sorted((i, v) for i in Y)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 616
intent: 
get equivalent week number from a date ` 2010/6/16 ` using isocalendar
canonicalized reference: 
datetime.date(2010, 6, 16).isocalendar()[1]
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
datetime.date(2010, 6, 16).isocalendar()[1]
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 617
intent: 
select multiple ranges of columns 1-10 , 15 , 17 , and 50-100 in pandas dataframe ` df `
canonicalized reference: 
df.iloc[:, (np.r_[1:10, (15), (17), 50:100])]
canonicalized prediction: 
df.findall('df', df)
reference code for bleu calculation: 
df.iloc[:, (np.r_[1:10, (15), (17), 50:100])]
predicted code for bleu calculation: 
df.findall('df', df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 618
intent: 
apply two different aggregating functions ` mean ` and ` sum ` to the same column ` dummy ` in pandas data frame ` df `
canonicalized reference: 
df.groupby('dummy').agg({'returns': [np.mean, np.sum]})
canonicalized prediction: 
sum.findall(sum, sum)
reference code for bleu calculation: 
df.groupby('dummy').agg({'returns': [np.mean, np.sum]})
predicted code for bleu calculation: 
sum.findall(sum, sum)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 619
intent: 
convert string ` s ` to lowercase
canonicalized reference: 
s.lower()
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
s.lower()
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 620
intent: 
convert utf-8 string ` s ` to lowercase
canonicalized reference: 
s.decode('utf-8').lower()
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
s.decode('utf-8').lower()
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 621
intent: 
How to download a file via FTP with Python ftplib
canonicalized reference: 
ftp.retrbinary('RETR %s' % filename, file.write)
canonicalized prediction: 
os.path.findall(os.path, os)
reference code for bleu calculation: 
ftp.retrbinary('RETR %s' % filename, file.write)
predicted code for bleu calculation: 
os.path.findall(os.path, os)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 623
intent: 
output first 100 characters in a string ` my_string `
canonicalized reference: 
print my_string[0:100]
canonicalized prediction: 
my_string = my_string.findall(my_string, my_string)
reference code for bleu calculation: 
print(my_string[0:100])
predicted code for bleu calculation: 
my_string = my_string.findall(my_string, my_string)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 624
intent: 
make matplotlib plot legend put marker in legend only once
canonicalized reference: 
legend(numpoints=1)
canonicalized prediction: 
os.path.findall(os.path, legend)
reference code for bleu calculation: 
legend(numpoints=1)
predicted code for bleu calculation: 
os.path.findall(os.path, legend)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 625
intent: 
get set intersection between dictionaries ` d1 ` and ` d2 `
canonicalized reference: 
dict((x, set(y) & set(d1.get(x, ()))) for x, y in d2.items())
canonicalized prediction: 
d2 = d2.findall(d2, d2)
reference code for bleu calculation: 
dict((x, set(y) & set(d1.get(x, ()))) for x, y in d2.items())
predicted code for bleu calculation: 
d2 = d2.findall(d2, d2)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 626
intent: 
convert csv file 'test.csv ' into two-dimensional matrix
canonicalized reference: 
numpy.loadtxt(open('test.csv', 'rb'), delimiter=',', skiprows=1)
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
numpy.loadtxt(open('test.csv', 'rb'), delimiter=',', skiprows=1)
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 627
intent: 
filter the objects in django model 'Sample ' between date range ` 2011-01-01 ` and ` 2011-01-31 `
canonicalized reference: 
Sample.objects.filter(date__range=['2011-01-01', '2011-01-31'])
canonicalized prediction: 
2011-01-01<eos> = 2011-01-01<eos>.findall(2011-01-01<eos>, 2011-01-31<eos>)
reference code for bleu calculation: 
Sample.objects.filter(date__range=['2011-01-01', '2011-01-31'])
predicted code for bleu calculation: 
2011-01-01<eos> = 2011-01-01<eos>.findall(2011-01-01<eos>, 2011-01-31<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 628
intent: 
filter objects month wise in django model ` Sample ` for year ` 2011 `
canonicalized reference: 
Sample.objects.filter(date__year='2011', date__month='01')
canonicalized prediction: 
os.path.replace(Sample<eos>.path, Sample<eos>).split(Sample<eos>, 2011<eos>)
reference code for bleu calculation: 
Sample.objects.filter(date__year='2011', date__month='01')
predicted code for bleu calculation: 
os.path.replace(Sample<eos>.path, Sample<eos>).split(Sample<eos>, 2011<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 629
intent: 
create a dictionary ` { 'spam ' : 5 , 'ham ' : 6 } ` into another dictionary ` d ` field 'dict3 '
canonicalized reference: 
d['dict3'] = {'spam': 5, 'ham': 6}
canonicalized prediction: 
d.findall(d, d)
reference code for bleu calculation: 
d['dict3'] = {'spam': 5, 'ham': 6}
predicted code for bleu calculation: 
d.findall(d, d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 631
intent: 
merge dictionaries form array ` dicts ` in a single expression
canonicalized reference: 
dict((k, v) for d in dicts for k, v in list(d.items()))
canonicalized prediction: 
dicts.findall(dicts, dicts)
reference code for bleu calculation: 
dict((k, v) for d in dicts for k, v in list(d.items()))
predicted code for bleu calculation: 
dicts.findall(dicts, dicts)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 632
intent: 
Convert escaped utf string to utf string in ` your string `
canonicalized reference: 
print 'your string'.decode('string_escape')
canonicalized prediction: 
your = os.path.findall(os.path, your)
reference code for bleu calculation: 
print('your string'.decode('string_escape'))
predicted code for bleu calculation: 
your = os.path.findall(os.path, your)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 633
intent: 
counting the number of true booleans in a python list ` [ True , True , False , False , False , True ] `
canonicalized reference: 
sum([True, True, False, False, False, True])
canonicalized prediction: 
dict((i, v) for i in False)
reference code for bleu calculation: 
sum([True, True, False, False, False, True])
predicted code for bleu calculation: 
dict((i, v) for i in False)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 634
intent: 
set the size of figure ` fig ` in inches to width height of ` w ` , ` h `
canonicalized reference: 
fig.set_size_inches(w, h, forward=True)
canonicalized prediction: 
w.findall(w, w)
reference code for bleu calculation: 
fig.set_size_inches(w, h, forward=True)
predicted code for bleu calculation: 
w.findall(w, w)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 635
intent: 
format string with dict ` { ' 5 ' : 'you ' } ` with integer keys
canonicalized reference: 
'hello there %(5)s' % {'5': 'you'}
canonicalized prediction: 
5.findall('5', 5)
reference code for bleu calculation: 
'hello there %(5)s' % {'5': 'you'}
predicted code for bleu calculation: 
5.findall('5', 5)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 636
intent: 
Convert a string of numbers ` example_string ` separated by ` , ` into a list of integers
canonicalized reference: 
map(int, example_string.split(','))
canonicalized prediction: 
example_string<eos>.findall(example_string<eos>, example_string<eos>)
reference code for bleu calculation: 
map(int, example_string.split(','))
predicted code for bleu calculation: 
example_string<eos>.findall(example_string<eos>, example_string<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 637
intent: 
Convert a string of numbers 'example_string ' separated by comma into a list of numbers
canonicalized reference: 
[int(s) for s in example_string.split(',')]
canonicalized prediction: 
os.path.findall(os.path, 'example_string<eos>)
reference code for bleu calculation: 
[int(s) for s in example_string.split(',')]
predicted code for bleu calculation: 
os.path.findall(os.path, 'example_string<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 638
intent: 
Flatten list ` x `
canonicalized reference: 
x = [i[0] for i in x]
canonicalized prediction: 
list(x)
reference code for bleu calculation: 
x = [i[0] for i in x]
predicted code for bleu calculation: 
list(x)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 639
intent: 
convert list ` x ` into a flat list
canonicalized reference: 
y = map(operator.itemgetter(0), x)
canonicalized prediction: 
dict(x)
reference code for bleu calculation: 
y = map(operator.itemgetter(0), x)
predicted code for bleu calculation: 
dict(x)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 640
intent: 
get a list ` y ` of the first element of every tuple in list ` x `
canonicalized reference: 
y = [i[0] for i in x]
canonicalized prediction: 
y[i]
reference code for bleu calculation: 
y = [i[0] for i in x]
predicted code for bleu calculation: 
y[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 641
intent: 
extract all the values of a specific key named 'values ' from a list of dictionaries
canonicalized reference: 
results = [item['value'] for item in test_data]
canonicalized prediction: 
dict((i, v) for i in a)
reference code for bleu calculation: 
results = [item['value'] for item in test_data]
predicted code for bleu calculation: 
dict((i, v) for i in a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 642
intent: 
get current datetime in ISO format
canonicalized reference: 
datetime.datetime.now().isoformat()
canonicalized prediction: 
os.path.findall('datetime')
reference code for bleu calculation: 
datetime.datetime.now().isoformat()
predicted code for bleu calculation: 
os.path.findall('datetime')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 643
intent: 
get UTC datetime in ISO format
canonicalized reference: 
datetime.datetime.utcnow().isoformat()
canonicalized prediction: 
os.path.findall('datetime')
reference code for bleu calculation: 
datetime.datetime.utcnow().isoformat()
predicted code for bleu calculation: 
os.path.findall('datetime')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 644
intent: 
Merge all columns in dataframe ` df ` into one column
canonicalized reference: 
df.apply(' '.join, axis=0)
canonicalized prediction: 
df[i] = list(df)
reference code for bleu calculation: 
df.apply(' '.join, axis=0)
predicted code for bleu calculation: 
df[i] = list(df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 645
intent: 
pandas subtract a row from dataframe ` df2 ` from dataframe ` df `
canonicalized reference: 
pd.DataFrame(df.values - df2.values, columns=df.columns)
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
pd.DataFrame(df.values - df2.values, columns=df.columns)
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 646
intent: 
read file 'myfile.txt ' using universal newline mode ' U '
canonicalized reference: 
print open('myfile.txt', 'U').read()
canonicalized prediction: 
os.path.findall(os.path, U)
reference code for bleu calculation: 
print(open('myfile.txt', 'U').read())
predicted code for bleu calculation: 
os.path.findall(os.path, U)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 647
intent: 
print line ` line ` from text file with 'utf-16-le ' format
canonicalized reference: 
print line.decode('utf-16-le').split()
canonicalized prediction: 
os.path.findall(os.path, os.path).replace(os.path, line)
reference code for bleu calculation: 
print(line.decode('utf-16-le').split())
predicted code for bleu calculation: 
os.path.findall(os.path, os.path).replace(os.path, line)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 648
intent: 
open a text file ` data.txt ` in io module with encoding ` utf-16-le `
canonicalized reference: 
file = io.open('data.txt', 'r', encoding='utf-16-le')
canonicalized prediction: 
utf-16-le<eos> = utf-16-le<eos>.findall(utf-16-le<eos>, utf-16-le<eos>)
reference code for bleu calculation: 
file = io.open('data.txt', 'r', encoding='utf-16-le')
predicted code for bleu calculation: 
utf-16-le<eos> = utf-16-le<eos>.findall(utf-16-le<eos>, utf-16-le<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 649
intent: 
Join data of dataframe ` df1 ` with data in dataframe ` df2 ` based on similar values of column 'user_id ' in both dataframes
canonicalized reference: 
s1 = pd.merge(df1, df2, how='inner', on=['user_id'])
canonicalized prediction: 
df1.findall(df1, df2)
reference code for bleu calculation: 
s1 = pd.merge(df1, df2, how='inner', on=['user_id'])
predicted code for bleu calculation: 
df1.findall(df1, df2)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 650
intent: 
check if string ` foo ` is UTF-8 encoded
canonicalized reference: 
foo.decode('utf8').encode('utf8')
canonicalized prediction: 
foo[i] = list(foo)
reference code for bleu calculation: 
foo.decode('utf8').encode('utf8')
predicted code for bleu calculation: 
foo[i] = list(foo)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 651
intent: 
get the dimensions of numpy array ` a `
canonicalized reference: 
a.shape
canonicalized prediction: 
list(a)
reference code for bleu calculation: 
a.shape
predicted code for bleu calculation: 
list(a)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 652
intent: 
get the dimensions of numpy array ` a `
canonicalized reference: 
N.shape(a)
canonicalized prediction: 
list(a)
reference code for bleu calculation: 
N.shape(a)
predicted code for bleu calculation: 
list(a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 653
intent: 
get the dimensions of array ` a `
canonicalized reference: 
N.shape(a)
canonicalized prediction: 
list(a)
reference code for bleu calculation: 
N.shape(a)
predicted code for bleu calculation: 
list(a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 654
intent: 
get the dimensions of numpy array ` a `
canonicalized reference: 
a.shape
canonicalized prediction: 
list(a)
reference code for bleu calculation: 
a.shape
predicted code for bleu calculation: 
list(a)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 655
intent: 
get the indices of tuples in list of tuples ` L ` where the first value is 53
canonicalized reference: 
[i for i, v in enumerate(L) if v[0] == 53]
canonicalized prediction: 
dict(L)
reference code for bleu calculation: 
[i for i, v in enumerate(L) if v[0] == 53]
predicted code for bleu calculation: 
dict(L)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 656
intent: 
convert string of bytes ` y\xcc\xa6\xbb ` into an int
canonicalized reference: 
struct.unpack('<L', 'y\xcc\xa6\xbb')[0]
canonicalized prediction: 
y\xcc\xa6\xbb<eos> = y\xcc\xa6\xbb<eos>.findall(y\xcc\xa6\xbb<eos>,
    y\xcc\xa6\xbb<eos>)
reference code for bleu calculation: 
struct.unpack('<L', 'y\xcc\xa6\xbb')[0]
predicted code for bleu calculation: 
y\xcc\xa6\xbb<eos> = y\xcc\xa6\xbb<eos>.findall(y\xcc\xa6\xbb<eos>,
    y\xcc\xa6\xbb<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 657
intent: 
get the first row , second column ; second row , first column , and first row third column values of numpy array ` arr `
canonicalized reference: 
arr[[0, 1, 1], [1, 0, 2]]
canonicalized prediction: 
arr[i]
reference code for bleu calculation: 
arr[[0, 1, 1], [1, 0, 2]]
predicted code for bleu calculation: 
arr[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 658
intent: 
create a list with permutations of string 'abcd '
canonicalized reference: 
list(powerset('abcd'))
canonicalized prediction: 
[i for i in 'abcd<eos> if i == 0]
reference code for bleu calculation: 
list(powerset('abcd'))
predicted code for bleu calculation: 
[i for i in 'abcd<eos> if i == 0]
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 659
intent: 
Convert string to boolean from defined set of strings
canonicalized reference: 
s in ['true', '1', 't', 'y', 'yes', 'yeah', 'yup', 'certainly', 'uh-huh']
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
s in ['true', '1', 't', 'y', 'yes', 'yeah', 'yup', 'certainly', 'uh-huh']
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 660
intent: 
replace special characters in url 'http : //spam.com/go/ ' using the ' % xx ' escape
canonicalized reference: 
urllib.parse.quote('http://spam.com/go/')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
urllib.parse.quote('http://spam.com/go/')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 661
intent: 
Save plot ` plt ` as svg file 'test.svg '
canonicalized reference: 
plt.savefig('test.svg')
canonicalized prediction: 
plt = plt.findall(plt, plt)
reference code for bleu calculation: 
plt.savefig('test.svg')
predicted code for bleu calculation: 
plt = plt.findall(plt, plt)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 662
intent: 
count the number of elements in array ` myArray `
canonicalized reference: 
len(myArray)
canonicalized prediction: 
dict(myArray<eos>)
reference code for bleu calculation: 
len(myArray)
predicted code for bleu calculation: 
dict(myArray<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 663
intent: 
insert directory './path/to/your/modules/ ' to current directory
canonicalized reference: 
sys.path.insert(0, './path/to/your/modules/')
canonicalized prediction: 
os.path.findall(os.path, insert)
reference code for bleu calculation: 
sys.path.insert(0, './path/to/your/modules/')
predicted code for bleu calculation: 
os.path.findall(os.path, insert)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 664
intent: 
How to plot with x-axis at the top of the figure ?
canonicalized reference: 
ax.xaxis.set_ticks_position('top')
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
ax.xaxis.set_ticks_position('top')
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 665
intent: 
Insert records in bulk from `` table1 '' of `` master '' DB to `` table1 '' of sqlite3 ` cursor ` object
canonicalized reference: 
cursor.execute('INSERT OR REPLACE INTO master.table1 SELECT * FROM table1')
canonicalized prediction: 
cursor = os.path.findall(cursor, cursor)
reference code for bleu calculation: 
cursor.execute('INSERT OR REPLACE INTO master.table1 SELECT * FROM table1')
predicted code for bleu calculation: 
cursor = os.path.findall(cursor, cursor)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 668
intent: 
Convert hex string `` deadbeef '' to integer
canonicalized reference: 
int('deadbeef', 16)
canonicalized prediction: 
os.path.findall('hex')
reference code for bleu calculation: 
int('deadbeef', 16)
predicted code for bleu calculation: 
os.path.findall('hex')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 669
intent: 
Convert hex string `` a '' to integer
canonicalized reference: 
int('a', 16)
canonicalized prediction: 
os.path.findall('hex')
reference code for bleu calculation: 
int('a', 16)
predicted code for bleu calculation: 
os.path.findall('hex')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 670
intent: 
Convert hex string `` 0xa '' to integer
canonicalized reference: 
int('0xa', 16)
canonicalized prediction: 
os.path.findall('hex')
reference code for bleu calculation: 
int('0xa', 16)
predicted code for bleu calculation: 
os.path.findall('hex')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 671
intent: 
Convert hex string ` s ` to integer
canonicalized reference: 
int(s, 16)
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
int(s, 16)
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 672
intent: 
Convert hex string ` hexString ` to int
canonicalized reference: 
int(hexString, 16)
canonicalized prediction: 
os.path.findall(hex, hex)
reference code for bleu calculation: 
int(hexString, 16)
predicted code for bleu calculation: 
os.path.findall(hex, hex)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 673
intent: 
print variable ` value ` without spaces
canonicalized reference: 
print 'Value is "' + str(value) + '"'
canonicalized prediction: 
value[i] = list(value)
reference code for bleu calculation: 
print('Value is "' + str(value) + '"')
predicted code for bleu calculation: 
value[i] = list(value)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 674
intent: 
Print a string ` value ` with string formatting
canonicalized reference: 
print 'Value is "{}"'.format(value)
canonicalized prediction: 
value = value.findall(value, value)
reference code for bleu calculation: 
print('Value is "{}"'.format(value))
predicted code for bleu calculation: 
value = value.findall(value, value)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 675
intent: 
Jinja join elements of array ` tags ` with space string ' '
canonicalized reference: 
{{tags | join(' ')}}
canonicalized prediction: 
tags<eos>.findall(tags<eos>, tags<eos>)
reference code for bleu calculation: 
{{tags | join(' ')}}
predicted code for bleu calculation: 
tags<eos>.findall(tags<eos>, tags<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 676
intent: 
get a list of locally installed Python modules
canonicalized reference: 
help('modules')
canonicalized prediction: 
os.path.findall(os.path(os.path, i))
reference code for bleu calculation: 
help('modules')
predicted code for bleu calculation: 
os.path.findall(os.path(os.path, i))
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 677
intent: 
Get only first element in each of the innermost of the multidimensional list ` listD `
canonicalized reference: 
[[[x[0]] for x in listD[i]] for i in range(len(listD))]
canonicalized prediction: 
dict(listD<eos>)
reference code for bleu calculation: 
[[[x[0]] for x in listD[i]] for i in range(len(listD))]
predicted code for bleu calculation: 
dict(listD<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 678
intent: 
Sort a string ` s ` in lexicographic order
canonicalized reference: 
sorted(s, key=str.upper)
canonicalized prediction: 
s[i] = list(s)
reference code for bleu calculation: 
sorted(s, key=str.upper)
predicted code for bleu calculation: 
s[i] = list(s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 679
intent: 
sort string ` s ` in lexicographic order
canonicalized reference: 
sorted(sorted(s), key=str.upper)
canonicalized prediction: 
s.findall(s, s)
reference code for bleu calculation: 
sorted(sorted(s), key=str.upper)
predicted code for bleu calculation: 
s.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 680
intent: 
get a sorted list of the characters of string ` s ` in lexicographic order , with lowercase letters first
canonicalized reference: 
sorted(s, key=str.lower)
canonicalized prediction: 
dict(s)
reference code for bleu calculation: 
sorted(s, key=str.lower)
predicted code for bleu calculation: 
dict(s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 681
intent: 
find all the rows in Dataframe 'df2 ' that are also present in Dataframe 'df1 ' , for the columns ' A ' , ' B ' , ' C ' and 'D ' .
canonicalized reference: 
pd.merge(df1, df2, on=['A', 'B', 'C', 'D'], how='inner')
canonicalized prediction: 
np.findall(B, B).split(B, B)
reference code for bleu calculation: 
pd.merge(df1, df2, on=['A', 'B', 'C', 'D'], how='inner')
predicted code for bleu calculation: 
np.findall(B, B).split(B, B)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 682
intent: 
Reverse key-value pairs in a dictionary ` map `
canonicalized reference: 
dict((v, k) for k, v in map.items())
canonicalized prediction: 
list(map)
reference code for bleu calculation: 
dict((v, k) for k, v in map.items())
predicted code for bleu calculation: 
list(map)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 683
intent: 
decode unicode string ` s ` into a readable unicode literal
canonicalized reference: 
s.decode('unicode_escape')
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
s.decode('unicode_escape')
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 684
intent: 
convert list of strings ` str_list ` into list of integers
canonicalized reference: 
[int(i) for i in str_list]
canonicalized prediction: 
sorted(str_list)
reference code for bleu calculation: 
[int(i) for i in str_list]
predicted code for bleu calculation: 
sorted(str_list)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 685
intent: 
convert a list with string ` [ ' 1 ' , ' 2 ' , ' 3 ' ] ` into list with integers
canonicalized reference: 
map(int, ['1', '2', '3'])
canonicalized prediction: 
3.3(3, 3)
reference code for bleu calculation: 
map(int, ['1', '2', '3'])
predicted code for bleu calculation: 
3.3(3, 3)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 686
intent: 
convert list with str into list with int
canonicalized reference: 
list(map(int, ['1', '2', '3']))
canonicalized prediction: 
[i for i in str if i != 0]
reference code for bleu calculation: 
list(map(int, ['1', '2', '3']))
predicted code for bleu calculation: 
[i for i in str if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 687
intent: 
find all anchor tags in html ` soup ` whose url begins with ` http : //www.iwashere.com `
canonicalized reference: 
soup.find_all('a', href=re.compile('http://www\\.iwashere\\.com/'))
canonicalized prediction: 
soup = soup.findall(soup, soup)
reference code for bleu calculation: 
soup.find_all('a', href=re.compile('http://www\\.iwashere\\.com/'))
predicted code for bleu calculation: 
soup = soup.findall(soup, soup)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 688
intent: 
find all anchors with a hyperlink that matches the pattern '^ ( ? ! ( ? : [ a-zA-Z ] [ a-zA-Z0-9+.- ] * : |// ) ) '
canonicalized reference: 
soup.find_all('a', href=re.compile('^(?!(?:[a-zA-Z][a-zA-Z0-9+.-]*:|//))'))
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
soup.find_all('a', href=re.compile('^(?!(?:[a-zA-Z][a-zA-Z0-9+.-]*:|//))'))
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 689
intent: 
execute a jar file 'Blender.jar ' using subprocess
canonicalized reference: 
subprocess.call(['java', '-jar', 'Blender.jar'])
canonicalized prediction: 
subprocess = os.path.findall('subprocess')
reference code for bleu calculation: 
subprocess.call(['java', '-jar', 'Blender.jar'])
predicted code for bleu calculation: 
subprocess = os.path.findall('subprocess')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 690
intent: 
insert row into mysql database with column 'column1 ' set to the value ` value `
canonicalized reference: 
cursor.execute('INSERT INTO table (`column1`) VALUES (%s)', (value,))
canonicalized prediction: 
os.path.findall(os.path, value)
reference code for bleu calculation: 
cursor.execute('INSERT INTO table (`column1`) VALUES (%s)', (value,))
predicted code for bleu calculation: 
os.path.findall(os.path, value)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 691
intent: 
remove a substring `` .com '' from the end of string ` url `
canonicalized reference: 
if url.endswith('.com'):
    url = url[:-4]
canonicalized prediction: 
url = url.findall(url, url)
reference code for bleu calculation: 
if url.endswith('.com'):
    url = url[:(-4)]
predicted code for bleu calculation: 
url = url.findall(url, url)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 692
intent: 
remove a substring `` .com '' from the end of string ` url `
canonicalized reference: 
url = re.sub('\\.com$', '', url)
canonicalized prediction: 
url = url.findall(url, url)
reference code for bleu calculation: 
url = re.sub('\\.com$', '', url)
predicted code for bleu calculation: 
url = url.findall(url, url)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 693
intent: 
remove a substring `` .com '' from the end of string ` url `
canonicalized reference: 
print url.replace('.com', '')
canonicalized prediction: 
url = url.findall(url, url)
reference code for bleu calculation: 
print(url.replace('.com', ''))
predicted code for bleu calculation: 
url = url.findall(url, url)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 694
intent: 
remove a substring ` suffix ` from the end of string ` text `
canonicalized reference: 
if not text.endswith(suffix):
    return text
canonicalized prediction: 
text.findall(text, text)
reference code for bleu calculation: 
if (not text.endswith(suffix)):
    return text
return text[:(len(text) - len(suffix))]
predicted code for bleu calculation: 
text.findall(text, text)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 695
intent: 
print each first value from a list of tuples ` mytuple ` with string formatting
canonicalized reference: 
print ', ,'.join([str(i[0]) for i in mytuple])
canonicalized prediction: 
dict(mytuple<eos>)
reference code for bleu calculation: 
print(', ,'.join([str(i[0]) for i in mytuple]))
predicted code for bleu calculation: 
dict(mytuple<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 696
intent: 
clamping floating number ` my_value ` to be between ` min_value ` and ` max_value `
canonicalized reference: 
max(min(my_value, max_value), min_value)
canonicalized prediction: 
min_value<eos>.findall(min_value<eos>, min_value<eos>)
reference code for bleu calculation: 
max(min(my_value, max_value), min_value)
predicted code for bleu calculation: 
min_value<eos>.findall(min_value<eos>, min_value<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 697
intent: 
split a unicode string ` text ` into a list of words and punctuation characters with a regex
canonicalized reference: 
re.findall('\\w+|[^\\w\\s]', text, re.UNICODE)
canonicalized prediction: 
text = text.findall('text')
reference code for bleu calculation: 
re.findall('\\w+|[^\\w\\s]', text, re.UNICODE)
predicted code for bleu calculation: 
text = text.findall('text')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 698
intent: 
execute raw sql queue `` in database ` db ` in sqlalchemy-flask app
canonicalized reference: 
result = db.engine.execute('<sql here>')
canonicalized prediction: 
db = db.findall(db, db)
reference code for bleu calculation: 
result = db.engine.execute('<sql here>')
predicted code for bleu calculation: 
db = db.findall(db, db)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 699
intent: 
quit program
canonicalized reference: 
sys.exit(0)
canonicalized prediction: 
quit<eos> = os.path.findall(quit<eos>, quit<eos>)
reference code for bleu calculation: 
sys.exit(0)
predicted code for bleu calculation: 
quit<eos> = os.path.findall(quit<eos>, quit<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 700
intent: 
get digits in string ` my_string `
canonicalized reference: 
"""""".join(c for c in my_string if c.isdigit())
canonicalized prediction: 
my_string[i] = list(my_string)
reference code for bleu calculation: 
"""""".join(c for c in my_string if c.isdigit())
predicted code for bleu calculation: 
my_string[i] = list(my_string)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 701
intent: 
split string ` str1 ` on one or more spaces with a regular expression
canonicalized reference: 
re.split(' +', str1)
canonicalized prediction: 
str1 = str1.findall('str1')
reference code for bleu calculation: 
re.split(' +', str1)
predicted code for bleu calculation: 
str1 = str1.findall('str1')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 702
intent: 
python split string based on regular expression
canonicalized reference: 
re.findall('\\S+', str1)
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
re.findall('\\S+', str1)
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 703
intent: 
Evaluate a nested dictionary ` myobject.id.number ` to get ` number ` if ` myobject ` is present with getattr
canonicalized reference: 
getattr(getattr(myobject, 'id', None), 'number', None)
canonicalized prediction: 
myobject<eos>.findall(myobject.id.number<eos>, myobject<eos>)
reference code for bleu calculation: 
getattr(getattr(myobject, 'id', None), 'number', None)
predicted code for bleu calculation: 
myobject<eos>.findall(myobject.id.number<eos>, myobject<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 704
intent: 
convert generator object to a dictionary
canonicalized reference: 
{i: (i * 2) for i in range(10)}
canonicalized prediction: 
[i for i in a if i != 0]
reference code for bleu calculation: 
{i: (i * 2) for i in range(10)}
predicted code for bleu calculation: 
[i for i in a if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 705
intent: 
convert generator object to a dictionary
canonicalized reference: 
dict((i, i * 2) for i in range(10))
canonicalized prediction: 
[i for i in a if i != 0]
reference code for bleu calculation: 
dict((i, i * 2) for i in range(10))
predicted code for bleu calculation: 
[i for i in a if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 706
intent: 
Matplotlib clear the current axes .
canonicalized reference: 
plt.cla()
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
plt.cla()
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 707
intent: 
split string ` s ` into float values and write sum to ` total `
canonicalized reference: 
total = sum(float(item) for item in s.split(','))
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
total = sum(float(item) for item in s.split(','))
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 708
intent: 
Convert ascii value ' P ' to binary
canonicalized reference: 
bin(ord('P'))
canonicalized prediction: 
os.path.findall(P, P)
reference code for bleu calculation: 
bin(ord('P'))
predicted code for bleu calculation: 
os.path.findall(P, P)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 709
intent: 
print a string after a specific substring ' , ' in string ` my_string `
canonicalized reference: 
print my_string.split(', ', 1)[1]
canonicalized prediction: 
my_string.findall('my_string', my_string)
reference code for bleu calculation: 
print(my_string.split(', ', 1)[1])
predicted code for bleu calculation: 
my_string.findall('my_string', my_string)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 710
intent: 
get value of key ` post code ` associated with first index of key ` places ` of dictionary ` data `
canonicalized reference: 
print data['places'][0]['post code']
canonicalized prediction: 
data[i]
reference code for bleu calculation: 
print(data['places'][0]['post code'])
predicted code for bleu calculation: 
data[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 711
intent: 
remove colon character surrounded by vowels letters in string ` word `
canonicalized reference: 
word = re.sub('([aeiou]):(([aeiou][^aeiou]*){3})$', '\\1\\2', word)
canonicalized prediction: 
word = re.findall(word, word)
reference code for bleu calculation: 
word = re.sub('([aeiou]):(([aeiou][^aeiou]*){3})$', '\\1\\2', word)
predicted code for bleu calculation: 
word = re.findall(word, word)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 712
intent: 
extract data field 'bar ' from json object
canonicalized reference: 
json.loads('{"foo": 42, "bar": "baz"}')['bar']
canonicalized prediction: 
os.path.findall(json, json)
reference code for bleu calculation: 
json.loads('{"foo": 42, "bar": "baz"}')['bar']
predicted code for bleu calculation: 
os.path.findall(json, json)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 713
intent: 
Convert JSON array ` array ` to Python object
canonicalized reference: 
data = json.loads(array)
canonicalized prediction: 
[i for i in array if i != 0]
reference code for bleu calculation: 
data = json.loads(array)
predicted code for bleu calculation: 
[i for i in array if i != 0]
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 714
intent: 
Convert JSON array ` array ` to Python object
canonicalized reference: 
data = json.loads(array)
canonicalized prediction: 
[i for i in array if i != 0]
reference code for bleu calculation: 
data = json.loads(array)
predicted code for bleu calculation: 
[i for i in array if i != 0]
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 717
intent: 
How to plot two columns of a pandas data frame using points ?
canonicalized reference: 
df.plot(x='col_name_1', y='col_name_2', style='o')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
df.plot(x='col_name_1', y='col_name_2', style='o')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 718
intent: 
Parsing HTML string ` html ` using BeautifulSoup
canonicalized reference: 
parsed_html = BeautifulSoup(html)
canonicalized prediction: 
html<eos> = html<eos>.findall(html<eos>, html<eos>)
reference code for bleu calculation: 
parsed_html = BeautifulSoup(html)
print(parsed_html.body.find('div', attrs={'class': 'container', }).text)
predicted code for bleu calculation: 
html<eos> = html<eos>.findall(html<eos>, html<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 719
intent: 
Parsing webpage 'http : //www.google.com/ ' using BeautifulSoup
canonicalized reference: 
page = urllib.request.urlopen('http://www.google.com/')
canonicalized prediction: 
os.path.findall(os.path, //www.google.com/<eos>)
reference code for bleu calculation: 
page = urllib.request.urlopen('http://www.google.com/')
soup = BeautifulSoup(page)
predicted code for bleu calculation: 
os.path.findall(os.path, //www.google.com/<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 720
intent: 
change figure size to 3 by 4 in matplotlib
canonicalized reference: 
plt.figure(figsize=(3, 4))
canonicalized prediction: 
os.path.findall(',', '')
reference code for bleu calculation: 
plt.figure(figsize=(3, 4))
predicted code for bleu calculation: 
os.path.findall(',', '')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 721
intent: 
Strip punctuation from string ` s `
canonicalized reference: 
s.translate(None, string.punctuation)
canonicalized prediction: 
s.findall('s', s)
reference code for bleu calculation: 
s.translate(None, string.punctuation)
predicted code for bleu calculation: 
s.findall('s', s)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 722
intent: 
django urlsafe base64 decode string ` uenc ` with decryption
canonicalized reference: 
base64.urlsafe_b64decode(uenc.encode('ascii'))
canonicalized prediction: 
os.path.findall(uenc<eos>, uenc<eos>)
reference code for bleu calculation: 
base64.urlsafe_b64decode(uenc.encode('ascii'))
predicted code for bleu calculation: 
os.path.findall(uenc<eos>, uenc<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 723
intent: 
get the number of all keys in the nested dictionary ` dict_list `
canonicalized reference: 
len(dict_test) + sum(len(v) for v in dict_test.values())
canonicalized prediction: 
dict(dict_list<eos>)
reference code for bleu calculation: 
len(dict_test) + sum(len(v) for v in dict_test.values())
predicted code for bleu calculation: 
dict(dict_list<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 724
intent: 
return the conversion of decimal ` d ` to hex without the '0x ' prefix
canonicalized reference: 
hex(d).split('x')[1]
canonicalized prediction: 
d.findall(d, d)
reference code for bleu calculation: 
hex(d).split('x')[1]
predicted code for bleu calculation: 
d.findall(d, d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 725
intent: 
create a list containing digits of number 123 as its elements
canonicalized reference: 
list(str(123))
canonicalized prediction: 
dict((i, v) for i in a)
reference code for bleu calculation: 
list(str(123))
predicted code for bleu calculation: 
dict((i, v) for i in a)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 726
intent: 
converting integer ` num ` to list
canonicalized reference: 
[int(x) for x in str(num)]
canonicalized prediction: 
num[i] = list(num)
reference code for bleu calculation: 
[int(x) for x in str(num)]
predicted code for bleu calculation: 
num[i] = list(num)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 727
intent: 
select a first form with no name in mechanize
canonicalized reference: 
br.select_form(nr=0)
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
br.select_form(nr=0)
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 728
intent: 
Open file 'sample.json ' in read mode with encoding of 'utf-8-sig '
canonicalized reference: 
json.load(codecs.open('sample.json', 'r', 'utf-8-sig'))
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
json.load(codecs.open('sample.json', 'r', 'utf-8-sig'))
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 729
intent: 
load json file 'sample.json ' with utf-8 bom header
canonicalized reference: 
json.loads(open('sample.json').read().decode('utf-8-sig'))
canonicalized prediction: 
os.path.findall('json')
reference code for bleu calculation: 
json.loads(open('sample.json').read().decode('utf-8-sig'))
predicted code for bleu calculation: 
os.path.findall('json')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 730
intent: 
setup a smtp mail server to ` smtp.gmail.com ` with port ` 587 `
canonicalized reference: 
server = smtplib.SMTP('smtp.gmail.com', 587)
canonicalized prediction: 
smtp.gmail.com<eos> = os.path.findall(os.path, smtp.gmail.com<eos>)
reference code for bleu calculation: 
server = smtplib.SMTP('smtp.gmail.com', 587)
predicted code for bleu calculation: 
smtp.gmail.com<eos> = os.path.findall(os.path, smtp.gmail.com<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 731
intent: 
revers correlating bits of integer ` n `
canonicalized reference: 
int('{:08b}'.format(n)[::-1], 2)
canonicalized prediction: 
n = n.findall('n')
reference code for bleu calculation: 
int('{:08b}'.format(n)[::-1], 2)
predicted code for bleu calculation: 
n = n.findall('n')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 732
intent: 
add column ` d ` to index of dataframe ` df `
canonicalized reference: 
df.set_index(['d'], append=True)
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.set_index(['d'], append=True)
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 733
intent: 
Iterating over a dictionary ` d ` using for loops
canonicalized reference: 
for key, value in d.items():
    pass
canonicalized prediction: 
d[i]
reference code for bleu calculation: 
for (key, value) in d.items():
    pass
predicted code for bleu calculation: 
d[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 734
intent: 
Iterating over a dictionary ` d ` using for loops
canonicalized reference: 
for key, value in list(d.items()):
    pass
canonicalized prediction: 
d[i]
reference code for bleu calculation: 
for (key, value) in list(d.items()):
    pass
predicted code for bleu calculation: 
d[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 735
intent: 
Iterating key and items over dictionary ` d `
canonicalized reference: 
for letter, number in list(d.items()):
    pass
canonicalized prediction: 
list(d)
reference code for bleu calculation: 
for (letter, number) in list(d.items()):
    pass
predicted code for bleu calculation: 
list(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 736
intent: 
Iterating key and items over dictionary ` d `
canonicalized reference: 
for k, v in list(d.items()):
    pass
canonicalized prediction: 
list(d)
reference code for bleu calculation: 
for (k, v) in list(d.items()):
    pass
predicted code for bleu calculation: 
list(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 737
intent: 
get keys and items of dictionary ` d `
canonicalized reference: 
list(d.items())
canonicalized prediction: 
dict(d)
reference code for bleu calculation: 
list(d.items())
predicted code for bleu calculation: 
dict(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 738
intent: 
get keys and items of dictionary ` d ` as a list
canonicalized reference: 
list(d.items())
canonicalized prediction: 
dict(d)
reference code for bleu calculation: 
list(d.items())
predicted code for bleu calculation: 
dict(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 739
intent: 
Iterating key and items over dictionary ` d `
canonicalized reference: 
for k, v in list(d.items()):
    pass
canonicalized prediction: 
list(d)
reference code for bleu calculation: 
for (k, v) in list(d.items()):
    pass
predicted code for bleu calculation: 
list(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 740
intent: 
Iterating key and items over dictionary ` d `
canonicalized reference: 
for letter, number in list(d.items()):
    pass
canonicalized prediction: 
list(d)
reference code for bleu calculation: 
for (letter, number) in list(d.items()):
    pass
predicted code for bleu calculation: 
list(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 741
intent: 
Iterating key and items over dictionary ` d `
canonicalized reference: 
for letter, number in list(d.items()):
    pass
canonicalized prediction: 
list(d)
reference code for bleu calculation: 
for (letter, number) in list(d.items()):
    pass
predicted code for bleu calculation: 
list(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 742
intent: 
query all data from table ` Task ` where the value of column ` time_spent ` is bigger than 3 hours
canonicalized reference: 
session.query(Task).filter(Task.time_spent > timedelta(hours=3)).all()
canonicalized prediction: 
time_spent<eos>.findall(time_spent<eos>, time_spent<eos>)
reference code for bleu calculation: 
session.query(Task).filter(Task.time_spent > timedelta(hours=3)).all()
predicted code for bleu calculation: 
time_spent<eos>.findall(time_spent<eos>, time_spent<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 743
intent: 
compile Visual Studio project ` project.sln ` from the command line through python
canonicalized reference: 
os.system('msbuild project.sln /p:Configuration=Debug')
canonicalized prediction: 
project.sln<eos> = os.path.findall(project.sln<eos>, project.sln<eos>)
reference code for bleu calculation: 
os.system('msbuild project.sln /p:Configuration=Debug')
predicted code for bleu calculation: 
project.sln<eos> = os.path.findall(project.sln<eos>, project.sln<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 744
intent: 
get max key in dictionary ` MyCount `
canonicalized reference: 
max(list(MyCount.keys()), key=int)
canonicalized prediction: 
dict(MyCount<eos>)
reference code for bleu calculation: 
max(list(MyCount.keys()), key=int)
predicted code for bleu calculation: 
dict(MyCount<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 746
intent: 
get a name of function ` my_function ` as a string
canonicalized reference: 
my_function.__name__
canonicalized prediction: 
my_function = my_function.findall(my_function, my_function)
reference code for bleu calculation: 
my_function.__name__
predicted code for bleu calculation: 
my_function = my_function.findall(my_function, my_function)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 747
intent: 
How to get a function name as a string in Python ?
canonicalized reference: 
my_function.__name__
canonicalized prediction: 
os.path.findall('name')
reference code for bleu calculation: 
my_function.__name__
predicted code for bleu calculation: 
os.path.findall('name')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 748
intent: 
check if all values in the columns of a numpy matrix ` a ` are same
canonicalized reference: 
np.all(a == a[(0), :], axis=0)
canonicalized prediction: 
[i for i in numpy if i != 0]
reference code for bleu calculation: 
np.all(a == a[(0), :], axis=0)
predicted code for bleu calculation: 
[i for i in numpy if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 749
intent: 
sort list ` a ` in ascending order based on the addition of the second and third elements of each tuple in it
canonicalized reference: 
sorted(a, key=lambda x: (sum(x[1:3]), x[0]))
canonicalized prediction: 
sorted(a)
reference code for bleu calculation: 
sorted(a, key=lambda x: (sum(x[1:3]), x[0]))
predicted code for bleu calculation: 
sorted(a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 750
intent: 
sort a list of tuples ` a ` by the sum of second and third element of each tuple
canonicalized reference: 
sorted(a, key=lambda x: (sum(x[1:3]), x[0]), reverse=True)
canonicalized prediction: 
sorted((i, v) for i in sum)
reference code for bleu calculation: 
sorted(a, key=lambda x: (sum(x[1:3]), x[0]), reverse=True)
predicted code for bleu calculation: 
sorted((i, v) for i in sum)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 751
intent: 
sorting a list of tuples ` lst ` by the sum of the second elements onwards , and third element of the tuple
canonicalized reference: 
sorted(lst, key=lambda x: (sum(x[1:]), x[0]))
canonicalized prediction: 
sorted(lst)
reference code for bleu calculation: 
sorted(lst, key=lambda x: (sum(x[1:]), x[0]))
predicted code for bleu calculation: 
sorted(lst)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 752
intent: 
sort the list of tuples ` lst ` by the sum of every value except the first and by the first value in reverse order
canonicalized reference: 
sorted(lst, key=lambda x: (sum(x[1:]), x[0]), reverse=True)
canonicalized prediction: 
sorted(lst)
reference code for bleu calculation: 
sorted(lst, key=lambda x: (sum(x[1:]), x[0]), reverse=True)
predicted code for bleu calculation: 
sorted(lst)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 753
intent: 
add header 'WWWAuthenticate ' in a flask app with value 'Basic realm= '' test '' '
canonicalized reference: 
response.headers['WWW-Authenticate'] = 'Basic realm="test"'
canonicalized prediction: 
test = os.path.findall(test, test)
reference code for bleu calculation: 
response.headers['WWW-Authenticate'] = 'Basic realm="test"'
predicted code for bleu calculation: 
test = os.path.findall(test, test)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 754
intent: 
clear session key 'mykey '
canonicalized reference: 
del request.session['mykey']
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
del request.session['mykey']
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 755
intent: 
convert date string '24052010 ' to date object in format ' % d % m % Y '
canonicalized reference: 
datetime.datetime.strptime('24052010', '%d%m%Y').date()
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
datetime.datetime.strptime('24052010', '%d%m%Y').date()
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 756
intent: 
Replace non-ASCII characters in string ` text ` with a single space
canonicalized reference: 
re.sub('[^\\x00-\\x7F]+', ' ', text)
canonicalized prediction: 
text = text.findall(text, text)
reference code for bleu calculation: 
re.sub('[^\\x00-\\x7F]+', ' ', text)
predicted code for bleu calculation: 
text = text.findall(text, text)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 757
intent: 
List of lists into numpy array
canonicalized reference: 
numpy.array([[1, 2], [3, 4]])
canonicalized prediction: 
numpy[i]
reference code for bleu calculation: 
numpy.array([[1, 2], [3, 4]])
predicted code for bleu calculation: 
numpy[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 758
intent: 
Get a list ` myList ` from 1 to 10
canonicalized reference: 
myList = [i for i in range(10)]
canonicalized prediction: 
10[i]
reference code for bleu calculation: 
myList = [i for i in range(10)]
predicted code for bleu calculation: 
10[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 759
intent: 
use regex pattern ' ( ( .+ ? ) \\2+ ) ' to split string '44442 ( 2 ) 2 ( 2 ) 44 '
canonicalized reference: 
[m[0] for m in re.compile('((.+?)\\2+)').findall('44442(2)2(2)44')]
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
[m[0] for m in re.compile('((.+?)\\2+)').findall('44442(2)2(2)44')]
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 760
intent: 
use regular expression ' ( ( \\d ) ( ? : [ ( ) ] *\\2* [ ( ) ] * ) * ) ' to split string ` s `
canonicalized reference: 
[i[0] for i in re.findall('((\\d)(?:[()]*\\2*[()]*)*)', s)]
canonicalized prediction: 
os.path.findall(s, s)
reference code for bleu calculation: 
[i[0] for i in re.findall('((\\d)(?:[()]*\\2*[()]*)*)', s)]
predicted code for bleu calculation: 
os.path.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 761
intent: 
remove the space between subplots in matplotlib.pyplot
canonicalized reference: 
fig.subplots_adjust(wspace=0, hspace=0)
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
fig.subplots_adjust(wspace=0, hspace=0)
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 762
intent: 
Reverse list ` x `
canonicalized reference: 
x[::-1]
canonicalized prediction: 
list(x)
reference code for bleu calculation: 
x[::-1]
predicted code for bleu calculation: 
list(x)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 763
intent: 
Python JSON encoding
canonicalized reference: 
json.dumps({'apple': 'cat', 'banana': 'dog', 'pear': 'fish'})
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
json.dumps({'apple': 'cat', 'banana': 'dog', 'pear': 'fish'})
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 764
intent: 
write a list of strings ` row ` to csv object ` csvwriter `
canonicalized reference: 
csvwriter.writerow(row)
canonicalized prediction: 
csvwriter<eos>[i] = list(row.items())
reference code for bleu calculation: 
csvwriter.writerow(row)
predicted code for bleu calculation: 
csvwriter<eos>[i] = list(row.items())
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 766
intent: 
Split a string ` text ` with comma , question mark or exclamation by non-consuming regex using look-behind
canonicalized reference: 
re.split('(?<=[\\.\\?!]) ', text)
canonicalized prediction: 
text = os.path.findall(text, text)
reference code for bleu calculation: 
re.split('(?<=[\\.\\?!]) ', text)
predicted code for bleu calculation: 
text = os.path.findall(text, text)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 767
intent: 
create a regular expression object with the pattern '\xe2\x80\x93 '
canonicalized reference: 
re.compile('\xe2\x80\x93')
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
re.compile('\xe2\x80\x93')
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 768
intent: 
declare an array ` variable `
canonicalized reference: 
variable = []
canonicalized prediction: 
array[i]
reference code for bleu calculation: 
variable = []
predicted code for bleu calculation: 
array[i]
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 769
intent: 
declare an array with element ' i '
canonicalized reference: 
intarray = array('i')
canonicalized prediction: 
os.path.findall('i')
reference code for bleu calculation: 
intarray = array('i')
predicted code for bleu calculation: 
os.path.findall('i')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 770
intent: 
given list ` to_reverse ` , reverse the all sublists and the list itself
canonicalized reference: 
[sublist[::-1] for sublist in to_reverse[::-1]]
canonicalized prediction: 
to_reverse<eos>[i]
reference code for bleu calculation: 
[sublist[::-1] for sublist in to_reverse[::-1]]
predicted code for bleu calculation: 
to_reverse<eos>[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 771
intent: 
Replace all non-alphanumeric characters in a string
canonicalized reference: 
re.sub('[^0-9a-zA-Z]+', '*', 'h^&ell`.,|o w]{+orld')
canonicalized prediction: 
os.path.findall(os.path, a)
reference code for bleu calculation: 
re.sub('[^0-9a-zA-Z]+', '*', 'h^&ell`.,|o w]{+orld')
predicted code for bleu calculation: 
os.path.findall(os.path, a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 772
intent: 
unescape special characters without splitting data in array of strings ` [ ' I ' , u ' < ' , '3s U ' , u ' & ' , ' you luvz me ' ] `
canonicalized reference: 
"""""".join(['I ', '<', '3s U ', '&', ' you luvz me'])
canonicalized prediction: 
np.findall(0, 1).split('u', '')
reference code for bleu calculation: 
"""""".join(['I ', '<', '3s U ', '&', ' you luvz me'])
predicted code for bleu calculation: 
np.findall(0, 1).split('u', '')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 773
intent: 
disable logging while running unit tests in python django
canonicalized reference: 
logging.disable(logging.CRITICAL)
canonicalized prediction: 
os.path.findall(os.path, os)
reference code for bleu calculation: 
logging.disable(logging.CRITICAL)
predicted code for bleu calculation: 
os.path.findall(os.path, os)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 775
intent: 
convert column of date objects 'DateObj ' in pandas dataframe ` df ` to strings in new column 'DateStr '
canonicalized reference: 
df['DateStr'] = df['DateObj'].dt.strftime('%d%m%Y')
canonicalized prediction: 
df = df.findall(df, df)
reference code for bleu calculation: 
df['DateStr'] = df['DateObj'].dt.strftime('%d%m%Y')
predicted code for bleu calculation: 
df = df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 776
intent: 
split string ` s ` by ' @ ' and get the first element
canonicalized reference: 
s.split('@')[0]
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
s.split('@')[0]
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 777
intent: 
drop rows of dataframe ` df ` whose index is smaller than the value of ` start_remove ` or bigger than the value of ` end_remove `
canonicalized reference: 
df.query('index < @start_remove or index > @end_remove')
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.query('index < @start_remove or index > @end_remove')
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 778
intent: 
Drop the rows in pandas timeseries ` df ` from the row containing index ` start_remove ` to the row containing index ` end_remove `
canonicalized reference: 
df.loc[(df.index < start_remove) | (df.index > end_remove)]
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.loc[(df.index < start_remove) | (df.index > end_remove)]
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 779
intent: 
Get the number of NaN values in each column of dataframe ` df `
canonicalized reference: 
df.isnull().sum()
canonicalized prediction: 
dict(df)
reference code for bleu calculation: 
df.isnull().sum()
predicted code for bleu calculation: 
dict(df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 780
intent: 
reset index of dataframe ` df ` so that existing index values are transferred into ` df ` as columns
canonicalized reference: 
df.reset_index(inplace=True)
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.reset_index(inplace=True)
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 781
intent: 
generate a list containing values associated with the key 'value ' of each dictionary inside list ` list_of_dicts `
canonicalized reference: 
[x['value'] for x in list_of_dicts]
canonicalized prediction: 
dict(list_of_dicts)
reference code for bleu calculation: 
[x['value'] for x in list_of_dicts]
predicted code for bleu calculation: 
dict(list_of_dicts)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 782
intent: 
python getting a list of value from list of dict
canonicalized reference: 
[d['value'] for d in l]
canonicalized prediction: 
[i for i in dict]
reference code for bleu calculation: 
[d['value'] for d in l]
predicted code for bleu calculation: 
[i for i in dict]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 783
intent: 
python getting a list of value from list of dict
canonicalized reference: 
[d['value'] for d in l if 'value' in d]
canonicalized prediction: 
[i for i in dict]
reference code for bleu calculation: 
[d['value'] for d in l if 'value' in d]
predicted code for bleu calculation: 
[i for i in dict]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 784
intent: 
convert numpy array into python list structure
canonicalized reference: 
np.array([[1, 2, 3], [4, 5, 6]]).tolist()
canonicalized prediction: 
[i for i in numpy if i == 0]
reference code for bleu calculation: 
np.array([[1, 2, 3], [4, 5, 6]]).tolist()
predicted code for bleu calculation: 
[i for i in numpy if i == 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 785
intent: 
converting string ' ( 1,2,3,4 ) ' to a tuple
canonicalized reference: 
ast.literal_eval('(1,2,3,4)')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
ast.literal_eval('(1,2,3,4)')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 786
intent: 
keep a list ` dataList ` of lists sorted as it is created by second element
canonicalized reference: 
dataList.sort(key=lambda x: x[1])
canonicalized prediction: 
dict(list(dataList<eos>) for i in dataList<eos>)
reference code for bleu calculation: 
dataList.sort(key=lambda x: x[1])
predicted code for bleu calculation: 
dict(list(dataList<eos>) for i in dataList<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 787
intent: 
remove duplicated items from list of lists ` testdata `
canonicalized reference: 
list(map(list, set(map(lambda i: tuple(i), testdata))))
canonicalized prediction: 
dict(testdata<eos>)
reference code for bleu calculation: 
list(map(list, set(map(lambda i: tuple(i), testdata))))
predicted code for bleu calculation: 
dict(testdata<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 788
intent: 
uniqueness for list of lists ` testdata `
canonicalized reference: 
[list(i) for i in set(tuple(i) for i in testdata)]
canonicalized prediction: 
list(testdata<eos>)
reference code for bleu calculation: 
[list(i) for i in set(tuple(i) for i in testdata)]
predicted code for bleu calculation: 
list(testdata<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 789
intent: 
in django , check if a user is in a group 'Member '
canonicalized reference: 
return user.groups.filter(name='Member').exists()
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
return user.groups.filter(name='Member').exists()
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 790
intent: 
check if a user ` user ` is in a group from list of groups ` [ 'group1 ' , 'group2 ' ] `
canonicalized reference: 
return user.groups.filter(name__in=['group1', 'group2']).exists()
canonicalized prediction: 
np.findall(user, user)
reference code for bleu calculation: 
return user.groups.filter(name__in=['group1', 'group2']).exists()
predicted code for bleu calculation: 
np.findall(user, user)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 791
intent: 
Change log level dynamically to 'DEBUG ' without restarting the application
canonicalized reference: 
logging.getLogger().setLevel(logging.DEBUG)
canonicalized prediction: 
os.path.findall(os.path, level)
reference code for bleu calculation: 
logging.getLogger().setLevel(logging.DEBUG)
predicted code for bleu calculation: 
os.path.findall(os.path, level)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 792
intent: 
Concat each values in a tuple ` ( 34.2424 , -64.2344 , 76.3534 , 45.2344 ) ` to get a string
canonicalized reference: 
"""""".join(str(i) for i in (34.2424, -64.2344, 76.3534, 45.2344))
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
"""""".join(str(i) for i in (34.2424, -64.2344, 76.3534, 45.2344))
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 793
intent: 
swap each pair of characters in string ` s `
canonicalized reference: 
"""""".join([s[x:x + 2][::-1] for x in range(0, len(s), 2)])
canonicalized prediction: 
s[i]
reference code for bleu calculation: 
"""""".join([s[x:x + 2][::-1] for x in range(0, len(s), 2)])
predicted code for bleu calculation: 
s[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 794
intent: 
save current figure to file 'graph.png ' with resolution of 1000 dpi
canonicalized reference: 
plt.savefig('graph.png', dpi=1000)
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
plt.savefig('graph.png', dpi=1000)
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 795
intent: 
delete items from list ` my_list ` if the item exist in list ` to_dell `
canonicalized reference: 
my_list = [[x for x in sublist if x not in to_del] for sublist in my_list]
canonicalized prediction: 
my_list[i]
reference code for bleu calculation: 
my_list = [[x for x in sublist if x not in to_del] for sublist in my_list]
predicted code for bleu calculation: 
my_list[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 796
intent: 
find all the elements that consists value ' 1 ' in a list of tuples ' a '
canonicalized reference: 
[item for item in a if 1 in item]
canonicalized prediction: 
dict((i, v) for i in 1)
reference code for bleu calculation: 
[item for item in a if 1 in item]
predicted code for bleu calculation: 
dict((i, v) for i in 1)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 797
intent: 
find all elements in a list of tuples ` a ` where the first element of each tuple equals 1
canonicalized reference: 
[item for item in a if item[0] == 1]
canonicalized prediction: 
[i for i in range(i) if i != 0]
reference code for bleu calculation: 
[item for item in a if item[0] == 1]
predicted code for bleu calculation: 
[i for i in range(i) if i != 0]
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 798
intent: 
Get the index value in list ` p_list ` using enumerate in list comprehension
canonicalized reference: 
{p.id: {'id': p.id, 'position': ind} for ind, p in enumerate(p_list)}
canonicalized prediction: 
dict(p_list<eos>)
reference code for bleu calculation: 
{p.id: {'id': p.id, 'position': ind} for ind, p in enumerate(p_list)}
predicted code for bleu calculation: 
dict(p_list<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 799
intent: 
how to uniqify a list of dict in python
canonicalized reference: 
[dict(y) for y in set(tuple(x.items()) for x in d)]
canonicalized prediction: 
os.path.findall(os.path, os.path.replace(os.path, os.path.replace(os.path,
    os.path))).replace('how')
reference code for bleu calculation: 
[dict(y) for y in set(tuple(x.items()) for x in d)]
predicted code for bleu calculation: 
os.path.findall(os.path, os.path.replace(os.path, os.path.replace(os.path,
    os.path))).replace('how')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 800
intent: 
load a file ` file.py ` into the python console
canonicalized reference: 
exec compile(open('file.py').read(), 'file.py', 'exec')
canonicalized prediction: 
file.py<eos> = os.findall(file.py<eos>, file.py<eos>)
reference code for bleu calculation: 
exec(compile(open('file.py').read(), 'file.py', 'exec'))
predicted code for bleu calculation: 
file.py<eos> = os.findall(file.py<eos>, file.py<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 801
intent: 
SQLAlchemy count the number of rows in table ` Congress `
canonicalized reference: 
rows = session.query(Congress).count()
canonicalized prediction: 
Congress<eos>[i] = Congress<eos>.items()
reference code for bleu calculation: 
rows = session.query(Congress).count()
predicted code for bleu calculation: 
Congress<eos>[i] = Congress<eos>.items()
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 802
intent: 
Execute Shell Script from python with variable
canonicalized reference: 
subprocess.call(['test.sh', str(domid)])
canonicalized prediction: 
os.path.findall(os.path, Script<eos>)
reference code for bleu calculation: 
subprocess.call(['test.sh', str(domid)])
predicted code for bleu calculation: 
os.path.findall(os.path, Script<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 803
intent: 
read excel file ` file_name ` using pandas
canonicalized reference: 
dfs = pd.read_excel(file_name, sheetname=None)
canonicalized prediction: 
file_name = file_name.findall(file_name, file_name)
reference code for bleu calculation: 
dfs = pd.read_excel(file_name, sheetname=None)
predicted code for bleu calculation: 
file_name = file_name.findall(file_name, file_name)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 804
intent: 
unpack the binary data represented by the hexadecimal string '4081637ef7d0424a ' to a float
canonicalized reference: 
struct.unpack('d', binascii.unhexlify('4081637ef7d0424a'))
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
struct.unpack('d', binascii.unhexlify('4081637ef7d0424a'))
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 805
intent: 
Get index of numpy array ` a ` with another numpy array ` b `
canonicalized reference: 
a[tuple(b)]
canonicalized prediction: 
b[i] = list(b)
reference code for bleu calculation: 
a[tuple(b)]
predicted code for bleu calculation: 
b[i] = list(b)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 806
intent: 
find all possible sequences of elements in a list ` [ 2 , 3 , 4 ] `
canonicalized reference: 
map(list, permutations([2, 3, 4]))
canonicalized prediction: 
dict(4)
reference code for bleu calculation: 
map(list, permutations([2, 3, 4]))
predicted code for bleu calculation: 
dict(4)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 807
intent: 
sort a list ` unsorted_list ` based on another sorted list ` presorted_list `
canonicalized reference: 
sorted(unsorted_list, key=presorted_list.index)
canonicalized prediction: 
[i for i in presorted_list<eos> if x != presorted_list<eos>]
reference code for bleu calculation: 
sorted(unsorted_list, key=presorted_list.index)
predicted code for bleu calculation: 
[i for i in presorted_list<eos> if x != presorted_list<eos>]
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 808
intent: 
How to get yesterday in python
canonicalized reference: 
datetime.datetime.now() - datetime.timedelta(days=1)
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
datetime.datetime.now() - datetime.timedelta(days=1)
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 809
intent: 
create a dataframe ` d ` filled with zeros with indices from 0 to length of ` data ` and column names from ` feature_list `
canonicalized reference: 
d = pd.DataFrame(0, index=np.arange(len(data)), columns=feature_list)
canonicalized prediction: 
d.findall(d, d)
reference code for bleu calculation: 
d = pd.DataFrame(0, index=np.arange(len(data)), columns=feature_list)
predicted code for bleu calculation: 
d.findall(d, d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 810
intent: 
find the index of sub string 'World ' in ` x `
canonicalized reference: 
x.find('World')
canonicalized prediction: 
x[i]
reference code for bleu calculation: 
x.find('World')
predicted code for bleu calculation: 
x[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 811
intent: 
find the index of sub string 'Aloha ' in ` x `
canonicalized reference: 
x.find('Aloha')
canonicalized prediction: 
x[i]
reference code for bleu calculation: 
x.find('Aloha')
predicted code for bleu calculation: 
x[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 812
intent: 
find the index of sub string 'cc ' in string 'sdfasdf '
canonicalized reference: 
"""sdfasdf""".index('cc')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
'sdfasdf'.index('cc')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 813
intent: 
find the index of sub string 'df ' in string 'sdfasdf '
canonicalized reference: 
"""sdfasdf""".index('df')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
'sdfasdf'.index('df')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 814
intent: 
find the index of sub string ' a ' in string ` str `
canonicalized reference: 
str.find('a')
canonicalized prediction: 
str.findall(str, str)
reference code for bleu calculation: 
str.find('a')
predicted code for bleu calculation: 
str.findall(str, str)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 815
intent: 
find the index of sub string ' g ' in string ` str `
canonicalized reference: 
str.find('g')
canonicalized prediction: 
str.findall(str, str)
reference code for bleu calculation: 
str.find('g')
predicted code for bleu calculation: 
str.findall(str, str)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 816
intent: 
find the index of sub string 's ' in string ` str ` starting from index 11
canonicalized reference: 
str.find('s', 11)
canonicalized prediction: 
str = str.findall(str, str)
reference code for bleu calculation: 
str.find('s', 11)
predicted code for bleu calculation: 
str = str.findall(str, str)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 817
intent: 
find the index of sub string 's ' in string ` str ` starting from index 15
canonicalized reference: 
str.find('s', 15)
canonicalized prediction: 
str.findall(str, str)
reference code for bleu calculation: 
str.find('s', 15)
predicted code for bleu calculation: 
str.findall(str, str)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 818
intent: 
find the index of sub string 's ' in string ` str ` starting from index 16
canonicalized reference: 
str.find('s', 16)
canonicalized prediction: 
str = str.findall(str, str)
reference code for bleu calculation: 
str.find('s', 16)
predicted code for bleu calculation: 
str = str.findall(str, str)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 819
intent: 
find the index of sub string 's ' in string ` str ` starting from index 11 and ending at index 14
canonicalized reference: 
str.find('s', 11, 14)
canonicalized prediction: 
str = str.findall(str, str)
reference code for bleu calculation: 
str.find('s', 11, 14)
predicted code for bleu calculation: 
str = str.findall(str, str)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 820
intent: 
sort list of date strings 'd '
canonicalized reference: 
sorted(d, key=lambda x: datetime.datetime.strptime(x, '%m-%Y'))
canonicalized prediction: 
dict(date)
reference code for bleu calculation: 
sorted(d, key=lambda x: datetime.datetime.strptime(x, '%m-%Y'))
predicted code for bleu calculation: 
dict(date)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 821
intent: 
Get all the sentences from a string ` text ` using regex
canonicalized reference: 
re.split('\\.\\s', text)
canonicalized prediction: 
text = re.findall(text, text)
reference code for bleu calculation: 
re.split('\\.\\s', text)
predicted code for bleu calculation: 
text = re.findall(text, text)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 822
intent: 
Regular expression in Python sentence extractor
canonicalized reference: 
re.split('\\.\\s', re.sub('\\.\\s*$', '', text))
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
re.split('\\.\\s', re.sub('\\.\\s*$', '', text))
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 823
intent: 
get all characters in string 'foobar ' up to the fourth index
canonicalized reference: 
"""foobar"""[:4]
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
"""foobar"""[:4]
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 824
intent: 
cut a string by delimiter ' & '
canonicalized reference: 
s.rfind('&')
canonicalized prediction: 
os.path.findall(&, &)
reference code for bleu calculation: 
s.rfind('&')
predicted code for bleu calculation: 
os.path.findall(&, &)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 825
intent: 
cut a string using delimiter ' & '
canonicalized reference: 
s[:s.rfind('&')]
canonicalized prediction: 
os.path.findall(&, &)
reference code for bleu calculation: 
s[:s.rfind('&')]
predicted code for bleu calculation: 
os.path.findall(&, &)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 826
intent: 
find a tag ` option ` whose ` value ` attribute is ` state ` in selenium
canonicalized reference: 
driver.find_element_by_xpath("//option[@value='" + state + "']").click()
canonicalized prediction: 
option<eos>.findall(option<eos>, option<eos>)
reference code for bleu calculation: 
driver.find_element_by_xpath("//option[@value='" + state + "']").click()
predicted code for bleu calculation: 
option<eos>.findall(option<eos>, option<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 827
intent: 
append line `` appended text '' to file `` test.txt ''
canonicalized reference: 
with open('test.txt', 'a') as myfile:
    myfile.write('appended text')
canonicalized prediction: 
os.path.findall(os.path, text)
reference code for bleu calculation: 
with open('test.txt', 'a') as myfile:
    myfile.write('appended text')
predicted code for bleu calculation: 
os.path.findall(os.path, text)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 828
intent: 
append line `` cool beans ... '' to file `` foo ''
canonicalized reference: 
with open('foo', 'a') as f:
    f.write('cool beans...')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
with open('foo', 'a') as f:
    f.write('cool beans...')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 829
intent: 
append to file 'test1 ' content 'koko '
canonicalized reference: 
with open('test1', 'ab') as f:
    pass
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
with open('test1', 'ab') as f:
    pass
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 830
intent: 
append to file 'test ' content 'koko '
canonicalized reference: 
open('test', 'a+b').write('koko')
canonicalized prediction: 
os.path.findall(os.path, content)
reference code for bleu calculation: 
open('test', 'a+b').write('koko')
predicted code for bleu calculation: 
os.path.findall(os.path, content)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 831
intent: 
split string ' x+13.5*10x-4e1 ' into tokens
canonicalized reference: 
print [i for i in re.split('([\\d.]+|\\W+)', 'x+13.5*10x-4e1') if i]
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
print([i for i in re.split('([\\d.]+|\\W+)', 'x+13.5*10x-4e1') if i])
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 832
intent: 
Find all Chinese characters in string ` ipath `
canonicalized reference: 
re.findall('[\\u4e00-\\u9fff]+', ipath)
canonicalized prediction: 
ipath<eos> = re.findall(ipath<eos>, ipath<eos>)
reference code for bleu calculation: 
re.findall('[\u4e00-\u9fff]+', ipath)
predicted code for bleu calculation: 
ipath<eos> = re.findall(ipath<eos>, ipath<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 833
intent: 
split string ` s ` by letter 's '
canonicalized reference: 
s.split('s')
canonicalized prediction: 
s.findall(s, s)
reference code for bleu calculation: 
s.split('s')
predicted code for bleu calculation: 
s.findall(s, s)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 834
intent: 
run shell command 'rm -r some.file ' in the background
canonicalized reference: 
subprocess.Popen(['rm', '-r', 'some.file'])
canonicalized prediction: 
os.path.findall(os.path, some.file<eos>)
reference code for bleu calculation: 
subprocess.Popen(['rm', '-r', 'some.file'])
predicted code for bleu calculation: 
os.path.findall(os.path, some.file<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 835
intent: 
convert a list of dictionaries ` listofdict into a dictionary of dictionaries
canonicalized reference: 
dict((d['name'], d) for d in listofdict)
canonicalized prediction: 
dict(listofdict<eos>)
reference code for bleu calculation: 
dict((d['name'], d) for d in listofdict)
predicted code for bleu calculation: 
dict(listofdict<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 836
intent: 
print current date and time in a regular format
canonicalized reference: 
datetime.datetime.now().strftime('%Y-%m-%d %H:%M')
canonicalized prediction: 
os.path.findall(os.path, date)
reference code for bleu calculation: 
datetime.datetime.now().strftime('%Y-%m-%d %H:%M')
predicted code for bleu calculation: 
os.path.findall(os.path, date)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 837
intent: 
print current date and time in a regular format
canonicalized reference: 
time.strftime('%Y-%m-%d %H:%M')
canonicalized prediction: 
os.path.findall(os.path, date)
reference code for bleu calculation: 
time.strftime('%Y-%m-%d %H:%M')
predicted code for bleu calculation: 
os.path.findall(os.path, date)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 838
intent: 
find consecutive consonants in a word ` CONCENTRATION ` using regex
canonicalized reference: 
re.findall('[bcdfghjklmnpqrstvwxyz]+', 'CONCERTATION', re.IGNORECASE)
canonicalized prediction: 
CONCENTRATION<eos> = CONCENTRATION<eos>.findall(CONCENTRATION<eos>,
    CONCENTRATION<eos>)
reference code for bleu calculation: 
re.findall('[bcdfghjklmnpqrstvwxyz]+', 'CONCERTATION', re.IGNORECASE)
predicted code for bleu calculation: 
CONCENTRATION<eos> = CONCENTRATION<eos>.findall(CONCENTRATION<eos>,
    CONCENTRATION<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 839
intent: 
get a list of indices of non zero elements in a list ` a `
canonicalized reference: 
[i for i, e in enumerate(a) if e != 0]
canonicalized prediction: 
[i for i in range(i) if i != 0]
reference code for bleu calculation: 
[i for i, e in enumerate(a) if e != 0]
predicted code for bleu calculation: 
[i for i in range(i) if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 840
intent: 
get multiple integer values from a string 'string1 '
canonicalized reference: 
map(int, re.findall('\\d+', string1))
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
map(int, re.findall('\\d+', string1))
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 841
intent: 
get the path of Python executable under windows
canonicalized reference: 
os.path.dirname(sys.executable)
canonicalized prediction: 
os.path.findall('path')
reference code for bleu calculation: 
os.path.dirname(sys.executable)
predicted code for bleu calculation: 
os.path.findall('path')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 842
intent: 
move an x-axis label to the top of a plot ` ax ` in matplotlib
canonicalized reference: 
ax.xaxis.set_label_position('top')
canonicalized prediction: 
ax[i]
reference code for bleu calculation: 
ax.xaxis.set_label_position('top')
predicted code for bleu calculation: 
ax[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 843
intent: 
move x-axis to the top of a plot ` ax `
canonicalized reference: 
ax.xaxis.tick_top()
canonicalized prediction: 
ax[i]
reference code for bleu calculation: 
ax.xaxis.tick_top()
predicted code for bleu calculation: 
ax[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 844
intent: 
Move x-axis of the pyplot object ` ax ` to the top of a plot in matplotlib
canonicalized reference: 
ax.xaxis.set_ticks_position('top')
canonicalized prediction: 
ax[i]
reference code for bleu calculation: 
ax.xaxis.set_ticks_position('top')
predicted code for bleu calculation: 
ax[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 845
intent: 
parse string '2015/01/01 12:12am ' to DateTime object using format ' % Y/ % m/ % d % I : % M % p '
canonicalized reference: 
datetime.strptime('2015/01/01 12:12am', '%Y/%m/%d %I:%M%p')
canonicalized prediction: 
os.path.findall(os.path, 12:12am<eos>)
reference code for bleu calculation: 
datetime.strptime('2015/01/01 12:12am', '%Y/%m/%d %I:%M%p')
predicted code for bleu calculation: 
os.path.findall(os.path, 12:12am<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 846
intent: 
Open image 'picture.jpg '
canonicalized reference: 
img = Image.open('picture.jpg')
canonicalized prediction: 
os.path.findall('image')
reference code for bleu calculation: 
img = Image.open('picture.jpg')
img.show()
predicted code for bleu calculation: 
os.path.findall('image')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 847
intent: 
Open image `` picture.jpg ''
canonicalized reference: 
img = Image.open('picture.jpg')
canonicalized prediction: 
picture.jpg<eos> = os.path.findall('picture.jpg<eos>')
reference code for bleu calculation: 
img = Image.open('picture.jpg')
Img.show
predicted code for bleu calculation: 
picture.jpg<eos> = os.path.findall('picture.jpg<eos>')
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 848
intent: 
terminate the script using status value 0
canonicalized reference: 
sys.exit(0)
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
sys.exit(0)
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 849
intent: 
abort the execution of the script using message 'aa ! errors ! '
canonicalized reference: 
sys.exit('aa! errors!')
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
sys.exit('aa! errors!')
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 850
intent: 
abort the execution of a python script
canonicalized reference: 
sys.exit()
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
sys.exit()
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 851
intent: 
find maximum with lookahead = 4 in a list ` arr `
canonicalized reference: 
[max(abs(x) for x in arr[i:i + 4]) for i in range(0, len(arr), 4)]
canonicalized prediction: 
arr[i]
reference code for bleu calculation: 
[max(abs(x) for x in arr[i:i + 4]) for i in range(0, len(arr), 4)]
predicted code for bleu calculation: 
arr[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 852
intent: 
set the current working directory to ' c : \\Users\\uname\\desktop\\python '
canonicalized reference: 
os.chdir('c:\\Users\\uname\\desktop\\python')
canonicalized prediction: 
os.path.findall('c')
reference code for bleu calculation: 
os.chdir('c:\\Users\\uname\\desktop\\python')
predicted code for bleu calculation: 
os.path.findall('c')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 853
intent: 
set the current working directory to path ` path `
canonicalized reference: 
os.chdir(path)
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
os.chdir(path)
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 854
intent: 
get a list ` no_integers ` of all the items in list ` mylist ` that are not of type ` int `
canonicalized reference: 
no_integers = [x for x in mylist if not isinstance(x, int)]
canonicalized prediction: 
[i for i in mylist if x != 0]
reference code for bleu calculation: 
no_integers = [x for x in mylist if not isinstance(x, int)]
predicted code for bleu calculation: 
[i for i in mylist if x != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 855
intent: 
match contents of an element to 'Example ' in xpath ( lxml )
canonicalized reference: 
tree.xpath(".//a[text()='Example']")[0].tag
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
tree.xpath(".//a[text()='Example']")[0].tag
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 856
intent: 
concatenate key/value pairs in dictionary ` a ` with string ' , ' into a single string
canonicalized reference: 
""", """.join([(str(k) + ' ' + str(v)) for k, v in list(a.items())])
canonicalized prediction: 
a[i]
reference code for bleu calculation: 
""", """.join([(str(k) + ' ' + str(v)) for k, v in list(a.items())])
predicted code for bleu calculation: 
a[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 857
intent: 
Strip all non-ASCII characters from a unicode string , ` \xa3\u20ac\xa3\u20ac `
canonicalized reference: 
print set(re.sub('[\x00-\x7f]', '', '\xa3\\u20ac\xa3\\u20ac'))
canonicalized prediction: 
\xa3\u20ac\xa3\u20ac<eos> = \xa3\u20ac\xa3\u20ac<eos>.findall(
    \xa3\u20ac\xa3\u20ac<eos>, \xa3\u20ac\xa3\u20ac<eos>)
reference code for bleu calculation: 
print(set(re.sub('[\x00-\x7f]', '', '\xa3\u20ac\xa3\u20ac')))
predicted code for bleu calculation: 
\xa3\u20ac\xa3\u20ac<eos> = \xa3\u20ac\xa3\u20ac<eos>.findall(
    \xa3\u20ac\xa3\u20ac<eos>, \xa3\u20ac\xa3\u20ac<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 858
intent: 
Get all non-ascii characters in a unicode string ` \xa3100 is worth more than \u20ac100 `
canonicalized reference: 
print re.sub('[\x00-\x7f]', '', '\xa3100 is worth more than \\u20ac100')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
print(re.sub('[\x00-\x7f]', '', '\xa3100 is worth more than \u20ac100'))
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 859
intent: 
build a dict of key : value pairs from a string representation of a dict , ` { 'muffin ' : 'lolz ' , 'foo ' : 'kitty ' } `
canonicalized reference: 
ast.literal_eval("{'muffin' : 'lolz', 'foo' : 'kitty'}")
canonicalized prediction: 
os.path.findall(os.path, os.path.path.path.path.path.split).split(os.path,
    'foo<eos>)
reference code for bleu calculation: 
ast.literal_eval("{'muffin' : 'lolz', 'foo' : 'kitty'}")
predicted code for bleu calculation: 
os.path.findall(os.path, os.path.path.path.path.path.split).split(os.path,
    'foo<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 860
intent: 
Print string ` t ` with proper unicode representations
canonicalized reference: 
print t.decode('unicode_escape')
canonicalized prediction: 
t = t.findall(t, t)
reference code for bleu calculation: 
print(t.decode('unicode_escape'))
predicted code for bleu calculation: 
t = t.findall(t, t)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 861
intent: 
Normalize string ` str ` from 'cp1252 ' code to 'utf-8 ' code
canonicalized reference: 
print str.encode('cp1252').decode('utf-8').encode('cp1252').decode('utf-8')
canonicalized prediction: 
str = str.findall(str, str)
reference code for bleu calculation: 
print(str.encode('cp1252').decode('utf-8').encode('cp1252').decode('utf-8'))
predicted code for bleu calculation: 
str = str.findall(str, str)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 862
intent: 
merge lists ` list_a ` and ` list_b ` into a list of tuples
canonicalized reference: 
zip(list_a, list_b)
canonicalized prediction: 
list_b<eos>[i] = list_a<eos>.items()
reference code for bleu calculation: 
zip(list_a, list_b)
predicted code for bleu calculation: 
list_b<eos>[i] = list_a<eos>.items()
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 863
intent: 
merge lists ` a ` and ` a ` into a list of tuples
canonicalized reference: 
list(zip(a, b))
canonicalized prediction: 
a[i]
reference code for bleu calculation: 
list(zip(a, b))
predicted code for bleu calculation: 
a[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 864
intent: 
convert pandas DataFrame ` df ` to a dictionary using ` id ` field as the key
canonicalized reference: 
df.set_index('id').to_dict()
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.set_index('id').to_dict()
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 865
intent: 
convert pandas dataframe ` df ` with fields 'id ' , 'value ' to dictionary
canonicalized reference: 
df.set_index('id')['value'].to_dict()
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.set_index('id')['value'].to_dict()
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 866
intent: 
Can I sort text by its numeric value in Python ?
canonicalized reference: 
sorted(list(mydict.items()), key=lambda a: map(int, a[0].split('.')))
canonicalized prediction: 
os.path.findall(os.path, sort)
reference code for bleu calculation: 
sorted(list(mydict.items()), key=lambda a: map(int, a[0].split('.')))
predicted code for bleu calculation: 
os.path.findall(os.path, sort)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 867
intent: 
remove parentheses and text within it in string ` filename `
canonicalized reference: 
re.sub('\\([^)]*\\)', '', filename)
canonicalized prediction: 
filename = re.findall(filename, filename)
reference code for bleu calculation: 
re.sub('\\([^)]*\\)', '', filename)
predicted code for bleu calculation: 
filename = re.findall(filename, filename)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 868
intent: 
Check if string ' a b ' only contains letters and spaces
canonicalized reference: 
"""a b""".replace(' ', '').isalpha()
canonicalized prediction: 
os.path.findall(b, b)
reference code for bleu calculation: 
"""a b""".replace(' ', '').isalpha()
predicted code for bleu calculation: 
os.path.findall(b, b)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 869
intent: 
sum each element ` x ` in list ` first ` with element ` y ` at the same index in list ` second ` .
canonicalized reference: 
[(x + y) for x, y in zip(first, second)]
canonicalized prediction: 
sum(y)
reference code for bleu calculation: 
[(x + y) for x, y in zip(first, second)]
predicted code for bleu calculation: 
sum(y)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 870
intent: 
sort a python dictionary ` a_dict ` by element ` 1 ` of the value
canonicalized reference: 
sorted(list(a_dict.items()), key=lambda item: item[1][1])
canonicalized prediction: 
[i for i in 1 if x != 0]
reference code for bleu calculation: 
sorted(list(a_dict.items()), key=lambda item: item[1][1])
predicted code for bleu calculation: 
[i for i in 1 if x != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 871
intent: 
How to exclude a character from a regex group ?
canonicalized reference: 
re.compile('[^a-zA-Z0-9-]+')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
re.compile('[^a-zA-Z0-9-]+')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 872
intent: 
get index of the biggest 2 values of a list ` a `
canonicalized reference: 
sorted(list(range(len(a))), key=lambda i: a[i])[-2:]
canonicalized prediction: 
[i for i in range(i) if i != 0]
reference code for bleu calculation: 
sorted(list(range(len(a))), key=lambda i: a[i])[-2:]
predicted code for bleu calculation: 
[i for i in range(i) if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 873
intent: 
get indexes of the largest ` 2 ` values from a list ` a ` using itemgetter
canonicalized reference: 
zip(*sorted(enumerate(a), key=operator.itemgetter(1)))[0][-2:]
canonicalized prediction: 
dict(2)
reference code for bleu calculation: 
zip(*sorted(enumerate(a), key=operator.itemgetter(1)))[0][-2:]
predicted code for bleu calculation: 
dict(2)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 874
intent: 
get the indexes of the largest ` 2 ` values from a list of integers ` a `
canonicalized reference: 
sorted(list(range(len(a))), key=lambda i: a[i], reverse=True)[:2]
canonicalized prediction: 
[i for i in 2 if i != 0]
reference code for bleu calculation: 
sorted(list(range(len(a))), key=lambda i: a[i], reverse=True)[:2]
predicted code for bleu calculation: 
[i for i in 2 if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 875
intent: 
get index of key ' c ' in dictionary ` x `
canonicalized reference: 
list(x.keys()).index('c')
canonicalized prediction: 
x[i]
reference code for bleu calculation: 
list(x.keys()).index('c')
predicted code for bleu calculation: 
x[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 876
intent: 
Print +1 using format ' { 0 : +d } '
canonicalized reference: 
print '{0:+d}'.format(score)
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
print('{0:+d}'.format(score))
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 877
intent: 
remove adjacent duplicate elements from a list ` [ 1 , 2 , 2 , 3 , 2 , 2 , 4 ] `
canonicalized reference: 
[k for k, g in itertools.groupby([1, 2, 2, 3, 2, 2, 4])]
canonicalized prediction: 
4[i]
reference code for bleu calculation: 
[k for k, g in itertools.groupby([1, 2, 2, 3, 2, 2, 4])]
predicted code for bleu calculation: 
4[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 878
intent: 
split string `` 0,1,2 '' based on delimiter ' , '
canonicalized reference: 
"""0,1,2""".split(',')
canonicalized prediction: 
os.path.findall(0,1,2<eos>, 0,1,2<eos>)
reference code for bleu calculation: 
"""0,1,2""".split(',')
predicted code for bleu calculation: 
os.path.findall(0,1,2<eos>, 0,1,2<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 879
intent: 
convert the string ' 0,1,2 ' to a list of integers
canonicalized reference: 
[int(x) for x in '0,1,2'.split(',')]
canonicalized prediction: 
os.path.findall(os.path, 0,1,2<eos>)
reference code for bleu calculation: 
[int(x) for x in '0,1,2'.split(',')]
predicted code for bleu calculation: 
os.path.findall(os.path, 0,1,2<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 880
intent: 
convert list of key-value tuples ` [ ( ' A ' , 1 ) , ( ' B ' , 2 ) , ( ' C ' , 3 ) ] ` into dictionary
canonicalized reference: 
dict([('A', 1), ('B', 2), ('C', 3)])
canonicalized prediction: 
A.join(A, A)
reference code for bleu calculation: 
dict([('A', 1), ('B', 2), ('C', 3)])
predicted code for bleu calculation: 
A.join(A, A)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 881
intent: 
save numpy array ` x ` into text file 'test.txt '
canonicalized reference: 
np.savetxt('test.txt', x)
canonicalized prediction: 
x.findall(x, x)
reference code for bleu calculation: 
np.savetxt('test.txt', x)
predicted code for bleu calculation: 
x.findall(x, x)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 882
intent: 
store the output of command 'ls ' in variable ` direct_output `
canonicalized reference: 
direct_output = subprocess.check_output('ls', shell=True)
canonicalized prediction: 
direct_output<eos>[i] = open(direct_output<eos>)
reference code for bleu calculation: 
direct_output = subprocess.check_output('ls', shell=True)
predicted code for bleu calculation: 
direct_output<eos>[i] = open(direct_output<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 883
intent: 
get all column name of dataframe ` df ` except for column 'T1_V6 '
canonicalized reference: 
df[df.columns - ['T1_V6']]
canonicalized prediction: 
df = df.findall(df, df)
reference code for bleu calculation: 
df[df.columns - ['T1_V6']]
predicted code for bleu calculation: 
df = df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 884
intent: 
get count of values in numpy array ` a ` that are between values ` 25 ` and ` 100 `
canonicalized reference: 
((25 < a) & (a < 100)).sum()
canonicalized prediction: 
100[i] = 100.items()
reference code for bleu calculation: 
((25 < a) & (a < 100)).sum()
predicted code for bleu calculation: 
100[i] = 100.items()
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 885
intent: 
Get day name from a datetime object
canonicalized reference: 
date.today().strftime('%A')
canonicalized prediction: 
os.path.findall(datetime, datetime)
reference code for bleu calculation: 
date.today().strftime('%A')
predicted code for bleu calculation: 
os.path.findall(datetime, datetime)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 886
intent: 
Python regular expression match whole word
canonicalized reference: 
re.search('\\bis\\b', your_string)
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
re.search('\\bis\\b', your_string)
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 888
intent: 
Get the date object ` date_of_manufacture ` of object ` car ` in string format ' % Y- % m- % d '
canonicalized reference: 
{{car.date_of_manufacture.strftime('%Y-%m-%d')}}
canonicalized prediction: 
os.path.replace(os.path, os.path).replace(date_of_manufacture<eos>, car<eos>)
reference code for bleu calculation: 
{{car.date_of_manufacture.strftime('%Y-%m-%d')}}
predicted code for bleu calculation: 
os.path.replace(os.path, os.path).replace(date_of_manufacture<eos>, car<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 889
intent: 
make a flat list from list of lists ` sublist `
canonicalized reference: 
[item for sublist in l for item in sublist]
canonicalized prediction: 
dict(sublist)
reference code for bleu calculation: 
[item for sublist in l for item in sublist]
predicted code for bleu calculation: 
dict(sublist)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 890
intent: 
make a flat list from list of lists ` list2d `
canonicalized reference: 
list(itertools.chain(*list2d))
canonicalized prediction: 
dict(list2d<eos>)
reference code for bleu calculation: 
list(itertools.chain(*list2d))
predicted code for bleu calculation: 
dict(list2d<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 891
intent: 
make a flat list from list of lists ` list2d `
canonicalized reference: 
list(itertools.chain.from_iterable(list2d))
canonicalized prediction: 
dict(list2d<eos>)
reference code for bleu calculation: 
list(itertools.chain.from_iterable(list2d))
predicted code for bleu calculation: 
dict(list2d<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 892
intent: 
convert ascii value ' a ' to int
canonicalized reference: 
ord('a')
canonicalized prediction: 
os.path.findall(os.path, int)
reference code for bleu calculation: 
ord('a')
predicted code for bleu calculation: 
os.path.findall(os.path, int)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 893
intent: 
replace white spaces in string ' a\n b\n c\nd e ' with empty string ``
canonicalized reference: 
re.sub('(?m)^[^\\S\\n]+', '', '  a\n b\n c\nd  e')
canonicalized prediction: 
os.path.findall(os.path, e)
reference code for bleu calculation: 
re.sub('(?m)^[^\\S\\n]+', '', '  a\n b\n c\nd  e')
predicted code for bleu calculation: 
os.path.findall(os.path, e)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 894
intent: 
remove white spaces from all the lines using a regular expression in string ' a\n b\n c '
canonicalized reference: 
re.sub('(?m)^\\s+', '', 'a\n b\n c')
canonicalized prediction: 
os.path.findall('c')
reference code for bleu calculation: 
re.sub('(?m)^\\s+', '', 'a\n b\n c')
predicted code for bleu calculation: 
os.path.findall('c')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 895
intent: 
destruct elements of list ` [ 1 , 2 , 3 ] ` to variables ` a ` , ` b ` and ` c `
canonicalized reference: 
a, b, c = [1, 2, 3]
canonicalized prediction: 
b.3(b, c)
reference code for bleu calculation: 
a, b, c = [1, 2, 3]
predicted code for bleu calculation: 
b.3(b, c)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 896
intent: 
split list ` mylist ` into a list of lists whose elements have the same first five characters
canonicalized reference: 
[list(v) for k, v in itertools.groupby(mylist, key=lambda x: x[:5])]
canonicalized prediction: 
sorted(mylist)
reference code for bleu calculation: 
[list(v) for k, v in itertools.groupby(mylist, key=lambda x: x[:5])]
predicted code for bleu calculation: 
sorted(mylist)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 897
intent: 
remove all instances of parenthesesis containing text beginning with ` as ` from string ` line `
canonicalized reference: 
line = re.sub('\\(+as .*?\\) ', '', line)
canonicalized prediction: 
line = line.findall(line, line)
reference code for bleu calculation: 
line = re.sub('\\(+as .*?\\) ', '', line)
predicted code for bleu calculation: 
line = line.findall(line, line)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 898
intent: 
skip the newline while printing ` line `
canonicalized reference: 
print line.rstrip('\n')
canonicalized prediction: 
line.findall(line, line)
reference code for bleu calculation: 
print(line.rstrip('\n'))
predicted code for bleu calculation: 
line.findall(line, line)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 899
intent: 
get index values of pandas dataframe ` df ` as list
canonicalized reference: 
df.index.values.tolist()
canonicalized prediction: 
df[i]
reference code for bleu calculation: 
df.index.values.tolist()
predicted code for bleu calculation: 
df[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 900
intent: 
check if list ` a ` is empty
canonicalized reference: 
if not a:
    pass
canonicalized prediction: 
list(a)
reference code for bleu calculation: 
if (not a):
    pass
predicted code for bleu calculation: 
list(a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 901
intent: 
check if list ` seq ` is empty
canonicalized reference: 
if not seq:
    pass
canonicalized prediction: 
list(seq)
reference code for bleu calculation: 
if (not seq):
    pass
predicted code for bleu calculation: 
list(seq)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 902
intent: 
check if list ` li ` is empty
canonicalized reference: 
if len(li) == 0:
    pass
canonicalized prediction: 
list(li)
reference code for bleu calculation: 
if (len(li) == 0):
    pass
predicted code for bleu calculation: 
list(li)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 903
intent: 
create a list containing the indices of elements greater than 4 in list ` a `
canonicalized reference: 
[i for i, v in enumerate(a) if v > 4]
canonicalized prediction: 
[i for i in 4 if i != 0]
reference code for bleu calculation: 
[i for i, v in enumerate(a) if v > 4]
predicted code for bleu calculation: 
[i for i in 4 if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 904
intent: 
reverse list ` yourdata `
canonicalized reference: 
sorted(yourdata, reverse=True)
canonicalized prediction: 
yourdata[i]
reference code for bleu calculation: 
sorted(yourdata, reverse=True)
predicted code for bleu calculation: 
yourdata[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 905
intent: 
sort list of nested dictionaries ` yourdata ` in reverse based on values associated with each dictionary 's key 'subkey '
canonicalized reference: 
sorted(yourdata, key=lambda d: d.get('key', {}).get('subkey'), reverse=True)
canonicalized prediction: 
sorted(yourdata)
reference code for bleu calculation: 
sorted(yourdata, key=lambda d: d.get('key', {}).get('subkey'), reverse=True)
predicted code for bleu calculation: 
sorted(yourdata)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 906
intent: 
sort list of nested dictionaries ` yourdata ` in reverse order of 'key ' and 'subkey '
canonicalized reference: 
yourdata.sort(key=lambda e: e['key']['subkey'], reverse=True)
canonicalized prediction: 
yourdata[i]
reference code for bleu calculation: 
yourdata.sort(key=lambda e: e['key']['subkey'], reverse=True)
predicted code for bleu calculation: 
yourdata[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 907
intent: 
remove decimal points in pandas data frame using round
canonicalized reference: 
df.round()
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
df.round()
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 908
intent: 
Get data from matplotlib plot
canonicalized reference: 
gca().get_lines()[n].get_xydata()
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
gca().get_lines()[n].get_xydata()
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 909
intent: 
get the maximum 2 values per row in array ` A `
canonicalized reference: 
A[:, -2:]
canonicalized prediction: 
list(A)
reference code for bleu calculation: 
A[:, -2:]
predicted code for bleu calculation: 
list(A)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 910
intent: 
Get value for `` username '' parameter in GET request in Django
canonicalized reference: 
request.GET.get('username', '')
canonicalized prediction: 
os.path.findall(os.path, username)
reference code for bleu calculation: 
request.GET.get('username', '')
predicted code for bleu calculation: 
os.path.findall(os.path, username)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 911
intent: 
pretty-print ordered dictionary ` o `
canonicalized reference: 
pprint(dict(list(o.items())))
canonicalized prediction: 
o[i]
reference code for bleu calculation: 
pprint(dict(list(o.items())))
predicted code for bleu calculation: 
o[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 912
intent: 
Confirm urls in Django properly
canonicalized reference: 
url('^$', include('sms.urls')),
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
url('^$', include('sms.urls')),
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 913
intent: 
Configure url in django properly
canonicalized reference: 
url('^', include('sms.urls')),
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
url('^', include('sms.urls')),
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 914
intent: 
get the tuple in list ` a_list ` that has the largest item in the second index
canonicalized reference: 
max_item = max(a_list, key=operator.itemgetter(1))
canonicalized prediction: 
sorted(a_list)
reference code for bleu calculation: 
max_item = max(a_list, key=operator.itemgetter(1))
predicted code for bleu calculation: 
sorted(a_list)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 915
intent: 
find tuple in list of tuples ` a_list ` with the largest second element
canonicalized reference: 
max(a_list, key=operator.itemgetter(1))
canonicalized prediction: 
a_list[i]
reference code for bleu calculation: 
max(a_list, key=operator.itemgetter(1))
predicted code for bleu calculation: 
a_list[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 916
intent: 
resample series ` s ` into 3 months bins and sum each bin
canonicalized reference: 
s.resample('3M', how='sum')
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
s.resample('3M', how='sum')
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 917
intent: 
extract elements at indices ( 1 , 2 , 5 ) from a list ` a `
canonicalized reference: 
[a[i] for i in (1, 2, 5)]
canonicalized prediction: 
[i for i in 5 if x != 0]
reference code for bleu calculation: 
[a[i] for i in (1, 2, 5)]
predicted code for bleu calculation: 
[i for i in 5 if x != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 918
intent: 
filter lines from a text file 'textfile ' which contain a word 'apple '
canonicalized reference: 
[line for line in open('textfile') if 'apple' in line]
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
[line for line in open('textfile') if 'apple' in line]
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 919
intent: 
convert a date string ` s ` to a datetime object
canonicalized reference: 
datetime.datetime.strptime(s, '%Y-%m-%dT%H:%M:%SZ')
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
datetime.datetime.strptime(s, '%Y-%m-%dT%H:%M:%SZ')
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 920
intent: 
reading tab-delimited csv file ` filename ` with pandas on mac
canonicalized reference: 
pandas.read_csv(filename, sep='\t', lineterminator='\r')
canonicalized prediction: 
filename = filename.findall(filename, filename)
reference code for bleu calculation: 
pandas.read_csv(filename, sep='\t', lineterminator='\r')
predicted code for bleu calculation: 
filename = filename.findall(filename, filename)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 921
intent: 
replace only first occurence of string ` TEST ` from a string ` longlongTESTstringTEST `
canonicalized reference: 
"""longlongTESTstringTEST""".replace('TEST', '?', 1)
canonicalized prediction: 
TEST<eos> = TEST<eos>.findall(TEST<eos>, TEST<eos>)
reference code for bleu calculation: 
'longlongTESTstringTEST'.replace('TEST', '?', 1)
predicted code for bleu calculation: 
TEST<eos> = TEST<eos>.findall(TEST<eos>, TEST<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 922
intent: 
zip file ` pdffile ` using its basename as directory name
canonicalized reference: 
archive.write(pdffile, os.path.basename(pdffile))
canonicalized prediction: 
pdffile<eos> = os.findall(pdffile<eos>, pdffile<eos>)
reference code for bleu calculation: 
archive.write(pdffile, os.path.basename(pdffile))
predicted code for bleu calculation: 
pdffile<eos> = os.findall(pdffile<eos>, pdffile<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 923
intent: 
create a dictionary of pairs from a list of tuples ` myListOfTuples `
canonicalized reference: 
dict(x[1:] for x in reversed(myListOfTuples))
canonicalized prediction: 
dict(myListOfTuples<eos>)
reference code for bleu calculation: 
dict(x[1:] for x in reversed(myListOfTuples))
predicted code for bleu calculation: 
dict(myListOfTuples<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 924
intent: 
subtract elements of list ` List1 ` from elements of list ` List2 `
canonicalized reference: 
[(x1 - x2) for x1, x2 in zip(List1, List2)]
canonicalized prediction: 
dict(List2<eos>)
reference code for bleu calculation: 
[(x1 - x2) for x1, x2 in zip(List1, List2)]
predicted code for bleu calculation: 
dict(List2<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 925
intent: 
check if string ` string ` starts with a number
canonicalized reference: 
string[0].isdigit()
canonicalized prediction: 
os.path.replace(os.path, os.path).split(starts<eos>, starts<eos>)
reference code for bleu calculation: 
string[0].isdigit()
predicted code for bleu calculation: 
os.path.replace(os.path, os.path).split(starts<eos>, starts<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 926
intent: 
Check if string ` strg ` starts with any of the elements in list ( ' 0 ' , ' 1 ' , ' 2 ' , ' 3 ' , ' 4 ' , ' 5 ' , ' 6 ' , ' 7 ' , ' 8 ' , ' 9 ' )
canonicalized reference: 
strg.startswith(('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'))
canonicalized prediction: 
strg<eos>.join(strg<eos>, strg<eos>)
reference code for bleu calculation: 
strg.startswith(('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'))
predicted code for bleu calculation: 
strg<eos>.join(strg<eos>, strg<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 927
intent: 
print script 's directory
canonicalized reference: 
print os.path.dirname(os.path.realpath(__file__))
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
print(os.path.dirname(os.path.realpath(__file__)))
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 928
intent: 
split string ` text ` by the occurrences of regex pattern ' ( ? < =\\ ? | ! |\\ . ) \\s { 0,2 } ( ? = [ A-Z ] | $ ) '
canonicalized reference: 
re.split('(?<=\\?|!|\\.)\\s{0,2}(?=[A-Z]|$)', text)
canonicalized prediction: 
text = re.findall(text, text)
reference code for bleu calculation: 
re.split('(?<=\\?|!|\\.)\\s{0,2}(?=[A-Z]|$)', text)
predicted code for bleu calculation: 
text = re.findall(text, text)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 929
intent: 
Make a scatter plot using unpacked values of list ` li `
canonicalized reference: 
plt.scatter(*zip(*li))
canonicalized prediction: 
li[i]
reference code for bleu calculation: 
plt.scatter(*zip(*li))
predicted code for bleu calculation: 
li[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 930
intent: 
rearrange tuple of tuples ` t `
canonicalized reference: 
tuple(zip(*t))
canonicalized prediction: 
t[i]
reference code for bleu calculation: 
tuple(zip(*t))
predicted code for bleu calculation: 
t[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 931
intent: 
Get average for every three columns in ` df ` dataframe
canonicalized reference: 
df.groupby(np.arange(len(df.columns)) // 3, axis=1).mean()
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.groupby(np.arange(len(df.columns)) // 3, axis=1).mean()
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 932
intent: 
convert a list ` L ` of ascii values to a string
canonicalized reference: 
"""""".join(chr(i) for i in L)
canonicalized prediction: 
dict(L)
reference code for bleu calculation: 
"""""".join(chr(i) for i in L)
predicted code for bleu calculation: 
dict(L)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 933
intent: 
count the number of pairs in dictionary ` d ` whose value equal to ` chosen_value `
canonicalized reference: 
sum(x == chosen_value for x in list(d.values()))
canonicalized prediction: 
d[i]
reference code for bleu calculation: 
sum(x == chosen_value for x in list(d.values()))
predicted code for bleu calculation: 
d[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 934
intent: 
count the number of values in ` d ` dictionary that are predicate to function ` some_condition `
canonicalized reference: 
sum(1 for x in list(d.values()) if some_condition(x))
canonicalized prediction: 
d[i]
reference code for bleu calculation: 
sum(1 for x in list(d.values()) if some_condition(x))
predicted code for bleu calculation: 
d[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 935
intent: 
convert double 0.00582811585976 to float
canonicalized reference: 
struct.unpack('f', struct.pack('f', 0.00582811585976))
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
struct.unpack('f', struct.pack('f', 0.00582811585976))
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 936
intent: 
convert datetime.date ` dt ` to utc timestamp
canonicalized reference: 
timestamp = (dt - datetime(1970, 1, 1)).total_seconds()
canonicalized prediction: 
dt = dt.findall(dt, dt)
reference code for bleu calculation: 
timestamp = (dt - datetime(1970, 1, 1)).total_seconds()
predicted code for bleu calculation: 
dt = dt.findall(dt, dt)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 937
intent: 
sort column ` m ` in panda dataframe ` df `
canonicalized reference: 
df.sort('m')
canonicalized prediction: 
df.sort(df, df)
reference code for bleu calculation: 
df.sort('m')
predicted code for bleu calculation: 
df.sort(df, df)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 939
intent: 
print the truth value of ` a `
canonicalized reference: 
print bool(a)
canonicalized prediction: 
a[i]
reference code for bleu calculation: 
print(bool(a))
predicted code for bleu calculation: 
a[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 940
intent: 
rename ` last ` row index label in dataframe ` df ` to ` a `
canonicalized reference: 
df = df.rename(index={last: 'a'})
canonicalized prediction: 
df.index(df, df)
reference code for bleu calculation: 
df = df.rename(index={last: 'a'})
predicted code for bleu calculation: 
df.index(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 941
intent: 
Fit Kmeans function to a one-dimensional array ` x ` by reshaping it to be a multidimensional array of single values
canonicalized reference: 
km.fit(x.reshape(-1, 1))
canonicalized prediction: 
x = x.findall(x, x)
reference code for bleu calculation: 
km.fit(x.reshape(-1, 1))
predicted code for bleu calculation: 
x = x.findall(x, x)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 942
intent: 
Sort a list of strings 'words ' such that items starting with 's ' come first .
canonicalized reference: 
sorted(words, key=lambda x: 'a' + x if x.startswith('s') else 'b' + x)
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
sorted(words, key=lambda x: 'a' + x if x.startswith('s') else 'b' + x)
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 943
intent: 
open the login site 'http : //somesite.com/adminpanel/index.php ' in the browser
canonicalized reference: 
webbrowser.open('http://somesite.com/adminpanel/index.php')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
webbrowser.open('http://somesite.com/adminpanel/index.php')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 944
intent: 
fetch all elements in a dictionary ` parent_dict ` , falling between two keys 2 and 4
canonicalized reference: 
dict((k, v) for k, v in parent_dict.items() if 2 < k < 4)
canonicalized prediction: 
dict(parent_dict<eos>)
reference code for bleu calculation: 
dict((k, v) for k, v in parent_dict.items() if 2 < k < 4)
predicted code for bleu calculation: 
dict(parent_dict<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 945
intent: 
fetch all elements in a dictionary 'parent_dict ' where the key is between the range of 2 to 4
canonicalized reference: 
dict((k, v) for k, v in parent_dict.items() if k > 2 and k < 4)
canonicalized prediction: 
[i for i in 4]
reference code for bleu calculation: 
dict((k, v) for k, v in parent_dict.items() if k > 2 and k < 4)
predicted code for bleu calculation: 
[i for i in 4]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 946
intent: 
sort two lists ` list1 ` and ` list2 ` together using lambda function
canonicalized reference: 
[list(x) for x in zip(*sorted(zip(list1, list2), key=lambda pair: pair[0]))]
canonicalized prediction: 
list1[i]
reference code for bleu calculation: 
[list(x) for x in zip(*sorted(zip(list1, list2), key=lambda pair: pair[0]))]
predicted code for bleu calculation: 
list1[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 947
intent: 
get the number of values in list ` j ` that is greater than 5
canonicalized reference: 
sum(i > 5 for i in j)
canonicalized prediction: 
[i for i in j if i != 0]
reference code for bleu calculation: 
sum(((i > 5) for i in j))
predicted code for bleu calculation: 
[i for i in j if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 948
intent: 
get the number of values in list ` j ` that is greater than 5
canonicalized reference: 
len([(1) for i in j if i > 5])
canonicalized prediction: 
[i for i in j if i != 0]
reference code for bleu calculation: 
len([1 for i in j if (i > 5)])
predicted code for bleu calculation: 
[i for i in j if i != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 949
intent: 
get the number of values in list ` j ` that is greater than ` i `
canonicalized reference: 
j = np.array(j)
canonicalized prediction: 
i[i]
reference code for bleu calculation: 
j = np.array(j)
sum((j > i))
predicted code for bleu calculation: 
i[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 950
intent: 
zip list ` a ` , ` b ` , ` c ` into a list of tuples
canonicalized reference: 
[(x + tuple(y)) for x, y in zip(zip(a, b), c)]
canonicalized prediction: 
c[i] = list(c)
reference code for bleu calculation: 
[(x + tuple(y)) for x, y in zip(zip(a, b), c)]
predicted code for bleu calculation: 
c[i] = list(c)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 951
intent: 
changing permission of file ` path ` to ` stat.S_IRUSR | stat.S_IRGRP | stat.S_IROTH `
canonicalized reference: 
os.chmod(path, stat.S_IRUSR | stat.S_IRGRP | stat.S_IROTH)
canonicalized prediction: 
path = path.findall(path, path)
reference code for bleu calculation: 
os.chmod(path, stat.S_IRUSR | stat.S_IRGRP | stat.S_IROTH)
predicted code for bleu calculation: 
path = path.findall(path, path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 952
intent: 
argparse associate zero or more arguments with flag 'file '
canonicalized reference: 
parser.add_argument('file', nargs='*')
canonicalized prediction: 
os.path.findall(os.path, arguments)
reference code for bleu calculation: 
parser.add_argument('file', nargs='*')
predicted code for bleu calculation: 
os.path.findall(os.path, arguments)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 953
intent: 
get a list of booleans ` z ` that shows wether the corresponding items in list ` x ` and ` y ` are equal
canonicalized reference: 
z = [(i == j) for i, j in zip(x, y)]
canonicalized prediction: 
[i for i in y if x != y]
reference code for bleu calculation: 
z = [(i == j) for i, j in zip(x, y)]
predicted code for bleu calculation: 
[i for i in y if x != y]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 954
intent: 
create a list which indicates whether each element in ` x ` and ` y ` is identical
canonicalized reference: 
[(x[i] == y[i]) for i in range(len(x))]
canonicalized prediction: 
y[i]
reference code for bleu calculation: 
[(x[i] == y[i]) for i in range(len(x))]
predicted code for bleu calculation: 
y[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 955
intent: 
Python : Extract numbers from a string
canonicalized reference: 
[int(s) for s in re.findall('\\b\\d+\\b', "he33llo 42 I'm a 32 string 30")]
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
[int(s) for s in re.findall('\\b\\d+\\b', "he33llo 42 I'm a 32 string 30")]
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 956
intent: 
create an empty data frame ` df2 ` with index from another data frame ` df1 `
canonicalized reference: 
df2 = pd.DataFrame(index=df1.index)
canonicalized prediction: 
df2 = df2.findall(df2, df2)
reference code for bleu calculation: 
df2 = pd.DataFrame(index=df1.index)
predicted code for bleu calculation: 
df2 = df2.findall(df2, df2)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 957
intent: 
unpack first and second bytes of byte string ` pS ` into integer
canonicalized reference: 
struct.unpack('h', pS[0:2])
canonicalized prediction: 
pS<eos> = pS<eos>.findall(pS<eos>, pS<eos>)
reference code for bleu calculation: 
struct.unpack('h', pS[0:2])
predicted code for bleu calculation: 
pS<eos> = pS<eos>.findall(pS<eos>, pS<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 958
intent: 
print list ` t ` into a table-like shape
canonicalized reference: 
print '\n'.join('  '.join(map(str, row)) for row in t)
canonicalized prediction: 
t[i]
reference code for bleu calculation: 
print('\n'.join('  '.join(map(str, row)) for row in t))
predicted code for bleu calculation: 
t[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 959
intent: 
Sort Pandas Dataframe by Date
canonicalized reference: 
df.sort_values(by='Date')
canonicalized prediction: 
np.findall(Date, Date)
reference code for bleu calculation: 
df.sort_values(by='Date')
predicted code for bleu calculation: 
np.findall(Date, Date)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 960
intent: 
check if a checkbox is checked in selenium python webdriver
canonicalized reference: 
driver.find_element_by_name('<check_box_name>').is_selected()
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
driver.find_element_by_name('<check_box_name>').is_selected()
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 961
intent: 
determine if checkbox with id `` is checked in selenium python webdriver
canonicalized reference: 
driver.find_element_by_id('<check_box_id>').is_selected()
canonicalized prediction: 
os.path.findall(os.path, id)
reference code for bleu calculation: 
driver.find_element_by_id('<check_box_id>').is_selected()
predicted code for bleu calculation: 
os.path.findall(os.path, id)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 962
intent: 
replace ` 0 ` with ` 2 ` in the list ` [ 0 , 1 , 0 , 3 ] `
canonicalized reference: 
[(a if a else 2) for a in [0, 1, 0, 3]]
canonicalized prediction: 
2.replace(2, 2)
reference code for bleu calculation: 
[(a if a else 2) for a in [0, 1, 0, 3]]
predicted code for bleu calculation: 
2.replace(2, 2)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 964
intent: 
Parse a unicode string ` M\\N { AMPERSAND } M\\N { APOSTROPHE } s `
canonicalized reference: 
"""M\\N{AMPERSAND}M\\N{APOSTROPHE}s""".decode('unicode-escape')
canonicalized prediction: 
os.path.findall(s, s)
reference code for bleu calculation: 
'M\\N{AMPERSAND}M\\N{APOSTROPHE}s'.decode('unicode-escape')
predicted code for bleu calculation: 
os.path.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 965
intent: 
convert Unicode codepoint to utf8 hex
canonicalized reference: 
chr(int('fd9b', 16)).encode('utf-8')
canonicalized prediction: 
os.path.findall('hex')
reference code for bleu calculation: 
chr(int('fd9b', 16)).encode('utf-8')
predicted code for bleu calculation: 
os.path.findall('hex')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 966
intent: 
use upper case letters to print hex value ` value `
canonicalized reference: 
print '0x%X' % value
canonicalized prediction: 
hex = os.path.findall(hex, hex)
reference code for bleu calculation: 
print('0x%X' % value)
predicted code for bleu calculation: 
hex = os.path.findall(hex, hex)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 967
intent: 
get a list ` cleaned ` that contains all non-empty elements in list ` your_list `
canonicalized reference: 
cleaned = [x for x in your_list if x]
canonicalized prediction: 
dict(your_list)
reference code for bleu calculation: 
cleaned = [x for x in your_list if x]
predicted code for bleu calculation: 
dict(your_list)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 968
intent: 
create a slice object using string ` string_slice `
canonicalized reference: 
slice(*[(int(i.strip()) if i else None) for i in string_slice.split(':')])
canonicalized prediction: 
string_slice<eos> = string_slice<eos>.findall(string_slice<eos>,
    string_slice<eos>)
reference code for bleu calculation: 
slice(*[(int(i.strip()) if i else None) for i in string_slice.split(':')])
predicted code for bleu calculation: 
string_slice<eos> = string_slice<eos>.findall(string_slice<eos>,
    string_slice<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 969
intent: 
Find all the tags ` a ` and ` div ` from Beautiful Soup object ` soup `
canonicalized reference: 
soup.find_all(['a', 'div'])
canonicalized prediction: 
a.path.split(a, div).split(a, div)
reference code for bleu calculation: 
soup.find_all(['a', 'div'])
predicted code for bleu calculation: 
a.path.split(a, div).split(a, div)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 970
intent: 
get the name of function ` func ` as a string
canonicalized reference: 
print func.__name__
canonicalized prediction: 
func = func.findall(func, func)
reference code for bleu calculation: 
print(func.__name__)
predicted code for bleu calculation: 
func = func.findall(func, func)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 971
intent: 
convert dictionary ` adict ` into string
canonicalized reference: 
"""""".join('{}{}'.format(key, val) for key, val in sorted(adict.items()))
canonicalized prediction: 
adict<eos>[i]
reference code for bleu calculation: 
"""""".join('{}{}'.format(key, val) for key, val in sorted(adict.items()))
predicted code for bleu calculation: 
adict<eos>[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 972
intent: 
convert dictionary ` adict ` into string
canonicalized reference: 
"""""".join('{}{}'.format(key, val) for key, val in list(adict.items()))
canonicalized prediction: 
adict<eos>[i]
reference code for bleu calculation: 
"""""".join('{}{}'.format(key, val) for key, val in list(adict.items()))
predicted code for bleu calculation: 
adict<eos>[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 973
intent: 
copy list ` old_list ` as ` new_list `
canonicalized reference: 
new_list = old_list[:]
canonicalized prediction: 
copy(old_list)
reference code for bleu calculation: 
new_list = old_list[:]
predicted code for bleu calculation: 
copy(old_list)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 974
intent: 
copy list ` old_list ` as ` new_list `
canonicalized reference: 
new_list = list(old_list)
canonicalized prediction: 
copy(old_list)
reference code for bleu calculation: 
new_list = list(old_list)
predicted code for bleu calculation: 
copy(old_list)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 975
intent: 
copy list ` old_list ` as ` new_list `
canonicalized reference: 
new_list = copy.copy(old_list)
canonicalized prediction: 
copy(old_list)
reference code for bleu calculation: 
new_list = copy.copy(old_list)
predicted code for bleu calculation: 
copy(old_list)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 976
intent: 
deep copy list ` old_list ` as ` new_list `
canonicalized reference: 
new_list = copy.deepcopy(old_list)
canonicalized prediction: 
old_list[i]
reference code for bleu calculation: 
new_list = copy.deepcopy(old_list)
predicted code for bleu calculation: 
old_list[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 977
intent: 
make a copy of list ` old_list `
canonicalized reference: 
[i for i in old_list]
canonicalized prediction: 
list(old_list)
reference code for bleu calculation: 
[i for i in old_list]
predicted code for bleu calculation: 
list(old_list)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 978
intent: 
remove frame of legend in plot ` plt `
canonicalized reference: 
plt.legend(frameon=False)
canonicalized prediction: 
plt[i]
reference code for bleu calculation: 
plt.legend(frameon=False)
predicted code for bleu calculation: 
plt[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 979
intent: 
Print a emoji from a string ` \\ud83d\\ude4f ` having surrogate pairs
canonicalized reference: 
"""\\ud83d\\ude4f""".encode('utf-16', 'surrogatepass').decode('utf-16')
canonicalized prediction: 
\\ud83d\\ude4f<eos> = \\ud83d\\ude4f<eos>.findall(\\ud83d\\ude4f<eos>,
    \\ud83d\\ude4f<eos>)
reference code for bleu calculation: 
"""\\ud83d\\ude4f""".encode('utf-16', 'surrogatepass').decode('utf-16')
predicted code for bleu calculation: 
\\ud83d\\ude4f<eos> = \\ud83d\\ude4f<eos>.findall(\\ud83d\\ude4f<eos>,
    \\ud83d\\ude4f<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 980
intent: 
calling a function named 'myfunction ' in the module
canonicalized reference: 
globals()['myfunction']()
canonicalized prediction: 
os.path.findall(os.path, 'myfunction<eos>)
reference code for bleu calculation: 
globals()['myfunction']()
predicted code for bleu calculation: 
os.path.findall(os.path, 'myfunction<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 981
intent: 
Check the status code of url `` http : //www.stackoverflow.com ''
canonicalized reference: 
urllib.request.urlopen('http://www.stackoverflow.com').getcode()
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
urllib.request.urlopen('http://www.stackoverflow.com').getcode()
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 982
intent: 
Check the status code of url `` www.python.org ''
canonicalized reference: 
conn = httplib.HTTPConnection('www.python.org')
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
conn = httplib.HTTPConnection('www.python.org')
conn.request('HEAD', '/')
r1 = conn.getresponse()
print(r1.status, r1.reason)
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 983
intent: 
Check the status code of url ` url `
canonicalized reference: 
r = requests.head(url)
canonicalized prediction: 
list(list(list(url)) for i in url)
reference code for bleu calculation: 
r = requests.head(url)
return (r.status_code == 200)
predicted code for bleu calculation: 
list(list(list(url)) for i in url)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 984
intent: 
Checking if website `` http : //www.stackoverflow.com '' is up
canonicalized reference: 
print urllib.request.urlopen('http://www.stackoverflow.com').getcode()
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
print(urllib.request.urlopen('http://www.stackoverflow.com').getcode())
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 985
intent: 
Selenium ` driver ` click a hyperlink with the pattern `` a [ href^='javascript ' ] ''
canonicalized reference: 
driver.find_element_by_css_selector("a[href^='javascript']").click()
canonicalized prediction: 
driver = driver.findall(driver, driver)
reference code for bleu calculation: 
driver.find_element_by_css_selector("a[href^='javascript']").click()
predicted code for bleu calculation: 
driver = driver.findall(driver, driver)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 986
intent: 
store data frame ` df ` to file ` file_name ` using pandas , python
canonicalized reference: 
df.to_pickle(file_name)
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.to_pickle(file_name)
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 987
intent: 
calculate the mean of columns with same name in dataframe ` df `
canonicalized reference: 
df.groupby(by=df.columns, axis=1).mean()
canonicalized prediction: 
df[i]
reference code for bleu calculation: 
df.groupby(by=df.columns, axis=1).mean()
predicted code for bleu calculation: 
df[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 988
intent: 
sort list ` bar ` by each element 's attribute ` attrb1 ` and attribute ` attrb2 ` in reverse order
canonicalized reference: 
bar.sort(key=lambda x: (x.attrb1, x.attrb2), reverse=True)
canonicalized prediction: 
attrb1<eos>[i]
reference code for bleu calculation: 
bar.sort(key=lambda x: (x.attrb1, x.attrb2), reverse=True)
predicted code for bleu calculation: 
attrb1<eos>[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 989
intent: 
get alpha value ` alpha ` of a png image ` img `
canonicalized reference: 
alpha = img.split()[-1]
canonicalized prediction: 
img = img.findall(img, img)
reference code for bleu calculation: 
alpha = img.split()[-1]
predicted code for bleu calculation: 
img = img.findall(img, img)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 990
intent: 
How to get the length of words in a sentence ?
canonicalized reference: 
[len(x) for x in s.split()]
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
[len(x) for x in s.split()]
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 991
intent: 
BeautifulSoup find tag 'div ' with styling 'width=300px ; ' in HTML string ` soup `
canonicalized reference: 
soup.findAll('div', style='width=300px;')
canonicalized prediction: 
soup = soup.findall('soup')
reference code for bleu calculation: 
soup.findAll('div', style='width=300px;')
predicted code for bleu calculation: 
soup = soup.findall('soup')
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 992
intent: 
Execute SQL statement ` sql ` with values of dictionary ` myDict ` as parameters
canonicalized reference: 
cursor.execute(sql, list(myDict.values()))
canonicalized prediction: 
sql<eos>.findall(sql<eos>, sql<eos>)
reference code for bleu calculation: 
cursor.execute(sql, list(myDict.values()))
predicted code for bleu calculation: 
sql<eos>.findall(sql<eos>, sql<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 993
intent: 
Convert CSV file ` Result.csv ` to Pandas dataframe using separator ' '
canonicalized reference: 
df.to_csv('Result.csv', index=False, sep=' ')
canonicalized prediction: 
Result.csv<eos> = Result.csv<eos>.findall(Result.csv<eos>, Result.csv<eos>)
reference code for bleu calculation: 
df.to_csv('Result.csv', index=False, sep=' ')
predicted code for bleu calculation: 
Result.csv<eos> = Result.csv<eos>.findall(Result.csv<eos>, Result.csv<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 994
intent: 
update the ` globals ( ) ` dictionary with the contents of the ` vars ( args ) ` dictionary
canonicalized reference: 
globals().update(vars(args))
canonicalized prediction: 
[i for i in globals if x != 0]
reference code for bleu calculation: 
globals().update(vars(args))
predicted code for bleu calculation: 
[i for i in globals if x != 0]
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 995
intent: 
find all substrings in ` mystring ` beginning and ending with square brackets
canonicalized reference: 
re.findall('\\[(.*?)\\]', mystring)
canonicalized prediction: 
mystring[i]
reference code for bleu calculation: 
re.findall('\\[(.*?)\\]', mystring)
predicted code for bleu calculation: 
mystring[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 996
intent: 
Format all floating variables ` var1 ` , ` var2 ` , ` var3 ` , ` var1 ` to print to two decimal places .
canonicalized reference: 
print '%.2f kg = %.2f lb = %.2f gal = %.2f l' % (var1, var2, var3, var4)
canonicalized prediction: 
var2.findall(var2, var2)
reference code for bleu calculation: 
print('%.2f kg = %.2f lb = %.2f gal = %.2f l' % (var1, var2, var3, var4))
predicted code for bleu calculation: 
var2.findall(var2, var2)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 997
intent: 
Remove all items from a dictionary ` d ` where the values are less than ` 1 `
canonicalized reference: 
d = dict((k, v) for k, v in d.items() if v > 0)
canonicalized prediction: 
d[i]
reference code for bleu calculation: 
d = dict((k, v) for k, v in d.items() if v > 0)
predicted code for bleu calculation: 
d[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 998
intent: 
Filter dictionary ` d ` to have items with value greater than 0
canonicalized reference: 
d = {k: v for k, v in list(d.items()) if v > 0}
canonicalized prediction: 
d[i]
reference code for bleu calculation: 
d = {k: v for k, v in list(d.items()) if v > 0}
predicted code for bleu calculation: 
d[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 999
intent: 
convert a string of date strings ` date_stngs ` to datetime objects and put them in a dataframe
canonicalized reference: 
pd.to_datetime(pd.Series(date_stngs))
canonicalized prediction: 
os.path.findall(os.path, datetime)
reference code for bleu calculation: 
pd.to_datetime(pd.Series(date_stngs))
predicted code for bleu calculation: 
os.path.findall(os.path, datetime)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1000
intent: 
get value at index ` [ 2 , 0 ] ` in dataframe ` df `
canonicalized reference: 
df.iloc[2, 0]
canonicalized prediction: 
df[i]
reference code for bleu calculation: 
df.iloc[2, 0]
predicted code for bleu calculation: 
df[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1001
intent: 
change the font size on plot ` matplotlib ` to 22
canonicalized reference: 
matplotlib.rcParams.update({'font.size': 22})
canonicalized prediction: 
matplotlib<eos>.findall(matplotlib<eos>, matplotlib<eos>)
reference code for bleu calculation: 
matplotlib.rcParams.update({'font.size': 22})
predicted code for bleu calculation: 
matplotlib<eos>.findall(matplotlib<eos>, matplotlib<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1002
intent: 
converting dictionary ` d ` into a dataframe ` pd ` with keys as data for column 'Date ' and the corresponding values as data for column 'DateValue '
canonicalized reference: 
pd.DataFrame(list(d.items()), columns=['Date', 'DateValue'])
canonicalized prediction: 
d.findall(d, d)
reference code for bleu calculation: 
pd.DataFrame(list(d.items()), columns=['Date', 'DateValue'])
predicted code for bleu calculation: 
d.findall(d, d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1003
intent: 
create a dataframe containing the multiplication of element-wise in dataframe ` df ` and dataframe ` df2 ` using index name and column labels of dataframe ` df `
canonicalized reference: 
pd.DataFrame(df.values * df2.values, columns=df.columns, index=df.index)
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
pd.DataFrame(df.values * df2.values, columns=df.columns, index=df.index)
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1004
intent: 
extract floating number from string 'Current Level : 13.4 db . '
canonicalized reference: 
re.findall('\\d+\\.\\d+', 'Current Level: 13.4 db.')
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
re.findall('\\d+\\.\\d+', 'Current Level: 13.4 db.')
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1005
intent: 
extract floating point numbers from a string 'Current Level : -13.2 db or 14.2 or 3 '
canonicalized reference: 
re.findall('[-+]?\\d*\\.\\d+|\\d+', 'Current Level: -13.2 db or 14.2 or 3')
canonicalized prediction: 
os.path.findall(os.path, 3)
reference code for bleu calculation: 
re.findall('[-+]?\\d*\\.\\d+|\\d+', 'Current Level: -13.2 db or 14.2 or 3')
predicted code for bleu calculation: 
os.path.findall(os.path, 3)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1006
intent: 
pair each element in list ` it ` 3 times into a tuple
canonicalized reference: 
zip(it, it, it)
canonicalized prediction: 
dict(3)
reference code for bleu calculation: 
zip(it, it, it)
predicted code for bleu calculation: 
dict(3)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1007
intent: 
lowercase a python dataframe string in column ' x ' if it has missing values in dataframe ` df `
canonicalized reference: 
df['x'].str.lower()
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df['x'].str.lower()
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1008
intent: 
append dict ` { ' f ' : var6 , ' g ' : var7 , ' h ' : var8 } ` to value of key ` e ` in dict ` jsobj [ ' a ' ] [ ' b ' ] `
canonicalized reference: 
jsobj['a']['b']['e'].append({'f': var6, 'g': var7, 'h': var8})
canonicalized prediction: 
e.findall(e, e)
reference code for bleu calculation: 
jsobj['a']['b']['e'].append({'f': var6, 'g': var7, 'h': var8})
predicted code for bleu calculation: 
e.findall(e, e)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1009
intent: 
Concat a list of strings ` lst ` using string formatting
canonicalized reference: 
"""""".join(lst)
canonicalized prediction: 
lst[i]
reference code for bleu calculation: 
"""""".join(lst)
predicted code for bleu calculation: 
lst[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1010
intent: 
sum values greater than 0 in dictionary ` d `
canonicalized reference: 
sum(v for v in list(d.values()) if v > 0)
canonicalized prediction: 
sum(d)
reference code for bleu calculation: 
sum(v for v in list(d.values()) if v > 0)
predicted code for bleu calculation: 
sum(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1011
intent: 
run flask application ` app ` in debug mode .
canonicalized reference: 
app.run(debug=True)
canonicalized prediction: 
app = app.findall(app, app)
reference code for bleu calculation: 
app.run(debug=True)
predicted code for bleu calculation: 
app = app.findall(app, app)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1012
intent: 
drop rows whose index value in list ` [ 1 , 3 ] ` in dataframe ` df `
canonicalized reference: 
df.drop(df.index[[1, 3]], inplace=True)
canonicalized prediction: 
df[i]
reference code for bleu calculation: 
df.drop(df.index[[1, 3]], inplace=True)
predicted code for bleu calculation: 
df[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1013
intent: 
replace nan values in a pandas data frame with the average of columns
canonicalized reference: 
df.apply(lambda x: x.fillna(x.mean()), axis=0)
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
df.apply(lambda x: x.fillna(x.mean()), axis=0)
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1014
intent: 
extract attribute ` my_attr ` from each object in list ` my_list `
canonicalized reference: 
[o.my_attr for o in my_list]
canonicalized prediction: 
my_list[i]
reference code for bleu calculation: 
[o.my_attr for o in my_list]
predicted code for bleu calculation: 
my_list[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1015
intent: 
python get time stamp on file ` file ` in ' % m/ % d/ % Y ' format
canonicalized reference: 
time.strftime('%m/%d/%Y', time.gmtime(os.path.getmtime(file)))
canonicalized prediction: 
os.path.findall(os.path, os.path).findall(os.path, os.path)
reference code for bleu calculation: 
time.strftime('%m/%d/%Y', time.gmtime(os.path.getmtime(file)))
predicted code for bleu calculation: 
os.path.findall(os.path, os.path).findall(os.path, os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1016
intent: 
check if dictionary ` subset ` is a subset of dictionary ` superset `
canonicalized reference: 
all(item in list(superset.items()) for item in list(subset.items()))
canonicalized prediction: 
superset<eos>[i]
reference code for bleu calculation: 
all(item in list(superset.items()) for item in list(subset.items()))
predicted code for bleu calculation: 
superset<eos>[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1017
intent: 
Convert integer elements in list ` wordids ` to strings
canonicalized reference: 
[str(wi) for wi in wordids]
canonicalized prediction: 
dict(wordids<eos>)
reference code for bleu calculation: 
[str(wi) for wi in wordids]
predicted code for bleu calculation: 
dict(wordids<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1018
intent: 
Reset the indexes of a pandas data frame
canonicalized reference: 
df2 = df.reset_index()
canonicalized prediction: 
os.path.findall(os.path, data)
reference code for bleu calculation: 
df2 = df.reset_index()
predicted code for bleu calculation: 
os.path.findall(os.path, data)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1019
intent: 
format datetime in ` dt ` as string in format ` ' % m/ % d/ % Y `
canonicalized reference: 
dt.strftime('%m/%d/%Y')
canonicalized prediction: 
dt = re.findall(dt, dt)
reference code for bleu calculation: 
dt.strftime('%m/%d/%Y')
predicted code for bleu calculation: 
dt = re.findall(dt, dt)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1020
intent: 
format floating point number ` TotalAmount ` to be rounded off to two decimal places and have a comma thousands ' seperator
canonicalized reference: 
print 'Total cost is: ${:,.2f}'.format(TotalAmount)
canonicalized prediction: 
TotalAmount<eos> = TotalAmount<eos>.findall(TotalAmount<eos>, TotalAmount<eos>)
reference code for bleu calculation: 
print('Total cost is: ${:,.2f}'.format(TotalAmount))
predicted code for bleu calculation: 
TotalAmount<eos> = TotalAmount<eos>.findall(TotalAmount<eos>, TotalAmount<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1021
intent: 
sum the values in each row of every two adjacent columns in dataframe ` df `
canonicalized reference: 
df.groupby(np.arange(len(df.columns)) // 2 + 1, axis=1).sum().add_prefix('s')
canonicalized prediction: 
dict(df)
reference code for bleu calculation: 
df.groupby(np.arange(len(df.columns)) // 2 + 1, axis=1).sum().add_prefix('s')
predicted code for bleu calculation: 
dict(df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1022
intent: 
create list ` randomList ` with 10 random floating point numbers between 0.0 and 1.0
canonicalized reference: 
randomList = [random.random() for _ in range(10)]
canonicalized prediction: 
os.path.findall(randomList<eos>, randomList<eos>)
reference code for bleu calculation: 
randomList = [random.random() for _ in range(10)]
predicted code for bleu calculation: 
os.path.findall(randomList<eos>, randomList<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1023
intent: 
find href value that has string 'follow ? page ' inside it
canonicalized reference: 
print soup.find('a', href=re.compile('.*follow\\?page.*'))
canonicalized prediction: 
os.path.findall(os.path)
reference code for bleu calculation: 
print(soup.find('a', href=re.compile('.*follow\\?page.*')))
predicted code for bleu calculation: 
os.path.findall(os.path)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1024
intent: 
immediately see output of print statement that does n't end in a newline
canonicalized reference: 
sys.stdout.flush()
canonicalized prediction: 
os.path.findall(os.path, os.path)
reference code for bleu calculation: 
sys.stdout.flush()
predicted code for bleu calculation: 
os.path.findall(os.path, os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1025
intent: 
get a random key ` country ` and value ` capital ` form a dictionary ` d `
canonicalized reference: 
country, capital = random.choice(list(d.items()))
canonicalized prediction: 
d[i] = list(d)
reference code for bleu calculation: 
country, capital = random.choice(list(d.items()))
predicted code for bleu calculation: 
d[i] = list(d)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1026
intent: 
split string ` Word to Split ` into a list of characters
canonicalized reference: 
list('Word to Split')
canonicalized prediction: 
os.path.findall(os.path, Word<eos>)
reference code for bleu calculation: 
list('Word to Split')
predicted code for bleu calculation: 
os.path.findall(os.path, Word<eos>)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1027
intent: 
Create a list containing words that contain vowel letter followed by the same vowel in file 'file.text '
canonicalized reference: 
[w for w in open('file.txt') if not re.search('[aeiou]{2}', w)]
canonicalized prediction: 
[i for i in 'file.text<eos> if i == 0]
reference code for bleu calculation: 
[w for w in open('file.txt') if not re.search('[aeiou]{2}', w)]
predicted code for bleu calculation: 
[i for i in 'file.text<eos> if i == 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1028
intent: 
Validate IP address using Regex
canonicalized reference: 
pat = re.compile('^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$')
canonicalized prediction: 
os.path.findall(os.path, Regex<eos>)
reference code for bleu calculation: 
pat = re.compile('^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$')
predicted code for bleu calculation: 
os.path.findall(os.path, Regex<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1029
intent: 
execute file 'filename.py '
canonicalized reference: 
exec compile(open('filename.py').read(), 'filename.py', 'exec')
canonicalized prediction: 
os.path.findall("'filename.py<eos>")
reference code for bleu calculation: 
exec(compile(open('filename.py').read(), 'filename.py', 'exec'))
predicted code for bleu calculation: 
os.path.findall("'filename.py<eos>")
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1030
intent: 
SQLAlchemy count the number of rows with distinct values in column ` name ` of table ` Tag `
canonicalized reference: 
session.query(Tag).distinct(Tag.name).group_by(Tag.name).count()
canonicalized prediction: 
name.findall(name, name)
reference code for bleu calculation: 
session.query(Tag).distinct(Tag.name).group_by(Tag.name).count()
predicted code for bleu calculation: 
name.findall(name, name)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1031
intent: 
remove null columns in a dataframe ` df `
canonicalized reference: 
df = df.dropna(axis=1, how='all')
canonicalized prediction: 
df[i] = list(df)
reference code for bleu calculation: 
df = df.dropna(axis=1, how='all')
predicted code for bleu calculation: 
df[i] = list(df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1032
intent: 
check if all lists in list ` L ` have three elements of integer 1
canonicalized reference: 
all(x.count(1) == 3 for x in L)
canonicalized prediction: 
dict(L)
reference code for bleu calculation: 
all(x.count(1) == 3 for x in L)
predicted code for bleu calculation: 
dict(L)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1033
intent: 
Get a list comparing two lists of tuples ` l1 ` and ` l2 ` if any first value in ` l1 ` matches with first value in ` l2 `
canonicalized reference: 
[x[0] for x in l1 if any(x[0] == y[0] for y in l2)]
canonicalized prediction: 
[i for i in l2 if x != l2]
reference code for bleu calculation: 
[x[0] for x in l1 if any(x[0] == y[0] for y in l2)]
predicted code for bleu calculation: 
[i for i in l2 if x != l2]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1034
intent: 
clear the textbox ` text ` in tkinter
canonicalized reference: 
tex.delete('1.0', END)
canonicalized prediction: 
text = text.findall(text, text)
reference code for bleu calculation: 
tex.delete('1.0', END)
predicted code for bleu calculation: 
text = text.findall(text, text)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1035
intent: 
Convert long int ` myNumber ` into date and time represented in the the string format ' % Y- % m- % d % H : % M : % S '
canonicalized reference: 
datetime.datetime.fromtimestamp(myNumber).strftime('%Y-%m-%d %H:%M:%S')
canonicalized prediction: 
os.path.findall(os.path, myNumber<eos>)
reference code for bleu calculation: 
datetime.datetime.fromtimestamp(myNumber).strftime('%Y-%m-%d %H:%M:%S')
predicted code for bleu calculation: 
os.path.findall(os.path, myNumber<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1036
intent: 
Spawn a process to run python script ` myscript.py ` in C++
canonicalized reference: 
system('python myscript.py')
canonicalized prediction: 
myscript.py<eos> = os.path.findall(os.path, os.path)
reference code for bleu calculation: 
system('python myscript.py')
predicted code for bleu calculation: 
myscript.py<eos> = os.path.findall(os.path, os.path)
pred_shorter_than_ref: False
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1037
intent: 
sort a list ` your_list ` of class objects by their values for the attribute ` anniversary_score `
canonicalized reference: 
your_list.sort(key=operator.attrgetter('anniversary_score'))
canonicalized prediction: 
your_list[i]
reference code for bleu calculation: 
your_list.sort(key=operator.attrgetter('anniversary_score'))
predicted code for bleu calculation: 
your_list[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1038
intent: 
sort list ` your_list ` by the ` anniversary_score ` attribute of each object
canonicalized reference: 
your_list.sort(key=lambda x: x.anniversary_score)
canonicalized prediction: 
your_list[i]
reference code for bleu calculation: 
your_list.sort(key=lambda x: x.anniversary_score)
predicted code for bleu calculation: 
your_list[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1039
intent: 
convert a tensor with list of constants ` [ 1 , 2 , 3 ] ` into a numpy array in tensorflow
canonicalized reference: 
print type(tf.Session().run(tf.constant([1, 2, 3])))
canonicalized prediction: 
3.findall(3, 3)
reference code for bleu calculation: 
print(type(tf.Session().run(tf.constant([1, 2, 3]))))
predicted code for bleu calculation: 
3.findall(3, 3)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1040
intent: 
convert list ` a ` from being consecutive sequences of tuples into a single sequence of elements
canonicalized reference: 
list(itertools.chain(*a))
canonicalized prediction: 
dict(a)
reference code for bleu calculation: 
list(itertools.chain(*a))
predicted code for bleu calculation: 
dict(a)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1041
intent: 
Set value for key ` a ` in dict ` count ` to ` 0 ` if key ` a ` does not exist or if value is ` none `
canonicalized reference: 
count.setdefault('a', 0)
canonicalized prediction: 
count.split(count, count)
reference code for bleu calculation: 
count.setdefault('a', 0)
predicted code for bleu calculation: 
count.split(count, count)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1042
intent: 
Do group by on ` cluster ` column in ` df ` and get its mean
canonicalized reference: 
df.groupby(['cluster']).mean()
canonicalized prediction: 
df.findall(df, df)
reference code for bleu calculation: 
df.groupby(['cluster']).mean()
predicted code for bleu calculation: 
df.findall(df, df)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1043
intent: 
get number in list ` myList ` closest in value to number ` myNumber `
canonicalized reference: 
min(myList, key=lambda x: abs(x - myNumber))
canonicalized prediction: 
dict(myNumber<eos>)
reference code for bleu calculation: 
min(myList, key=lambda x: abs(x - myNumber))
predicted code for bleu calculation: 
dict(myNumber<eos>)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1044
intent: 
check if any of the items in ` search ` appear in ` string `
canonicalized reference: 
any(x in string for x in search)
canonicalized prediction: 
search[i]
reference code for bleu calculation: 
any(x in string for x in search)
predicted code for bleu calculation: 
search[i]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1045
intent: 
search for occurrences of regex pattern ` pattern ` in string ` url `
canonicalized reference: 
print pattern.search(url).group(1)
canonicalized prediction: 
url.findall(url, url)
reference code for bleu calculation: 
print(pattern.search(url).group(1))
predicted code for bleu calculation: 
url.findall(url, url)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1046
intent: 
factorize all string values in dataframe ` s ` into floats
canonicalized reference: 
(s.factorize()[0] + 1).astype('float')
canonicalized prediction: 
s = s.findall(s, s)
reference code for bleu calculation: 
(s.factorize()[0] + 1).astype('float')
predicted code for bleu calculation: 
s = s.findall(s, s)
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1047
intent: 
Get a list ` C ` by subtracting values in one list ` B ` from corresponding values in another list ` A `
canonicalized reference: 
C = [(a - b) for a, b in zip(A, B)]
canonicalized prediction: 
[i for i in A if x != 0]
reference code for bleu calculation: 
C = [(a - b) for a, b in zip(A, B)]
predicted code for bleu calculation: 
[i for i in A if x != 0]
pred_shorter_than_ref: True
weired: False
------------------------------------------------------------
------------------------------------------------------------
example_id: 1048
intent: 
